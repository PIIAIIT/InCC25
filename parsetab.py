
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'sequencerightASSIGNPLUS_ASSIGNMINUS_ASSIGNPOWER_ASSIGNTIMES_ASSIGNDIVIDE_CEIL_ASSIGNDIVIDE_FLOOR_ASSIGNDIVIDE_ASSIGNEQUALS_ASSIGNUNEQUALS_ASSIGNGREATER_EQUALS_ASSIGNSMALLER_EQUALS_ASSIGNGREATER_THAN_ASSIGNSMALLER_THAN_ASSIGNAND_ASSIGNOR_ASSIGNXOR_ASSIGNMOD_ASSIGNEXP_ASSIGNleftCONSLAMBDAleftORleftXORleftANDleftCLSCMPCMP2leftEQUALSUNEQUALSleftGREATER_THANSMALLER_THANSMALLER_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDEDIVIDE_CEILDIVIDE_FLOORMODrightPOWEREXPleftIMAGrightNOTUPLUSUMINUSrightLPARENRPARENAND AND_ASSIGN ASSIGN BEGIN CLOSED_BRACKETS COLON COMMA CONS DIVIDE DIVIDE_ASSIGN DIVIDE_CEIL DIVIDE_CEIL_ASSIGN DIVIDE_FLOOR DIVIDE_FLOOR_ASSIGN DOT DOTS ECHO ELIF ELSE END EQUALS EQUALS_ASSIGN EXP EXP_ASSIGN FLOAT GREATER_EQUALS GREATER_EQUALS_ASSIGN GREATER_THAN GREATER_THAN_ASSIGN IDENTIFIER IF IMAG IN LAMBDA LAMBDA_ARROW LENGTH LET LIST LOOP LOOPTHEN LPAREN MINUS MINUS_ASSIGN MOD MOD_ASSIGN NOT NULL NUMBER OPEN_BRACKETS OR OR_ASSIGN PLUS PLUS_ASSIGN POWER POWER_ASSIGN RPAREN SEMICOLON SMALLER_EQUALS SMALLER_EQUALS_ASSIGN SMALLER_THAN SMALLER_THAN_ASSIGN STRING THEN TIMES TIMES_ASSIGN UNEQUALS UNEQUALS_ASSIGN WHILE XOR XOR_ASSIGNatomar : NUMBERatomar : FLOATatomar : STRINGatomar : IDENTIFIERatomar : LPAREN expression RPARENexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression DIVIDE_CEIL expression\n| expression DIVIDE_FLOOR expression\n| expression MOD expression\n| expression EXP expression\n| expression AND expression\n| expression OR expression\n| expression XOR expression\n| expression POWER expression\nexpression : NOT   expression\n| MINUS expression %prec UMINUS\n| PLUS  expression %prec UPLUSexpression : expression IMAGexpression : atomar\ncomparison : expression comparison_op expression %prec CMP\n\ncomparison : comparison comparison_op expression %prec CMP2\nexpression : comparison %prec CLScomparison_op : GREATER_THAN\n| SMALLER_THAN\n| UNEQUALS\n| EQUALS\n| SMALLER_EQUALS\n| GREATER_EQUALSexpression : IDENTIFIER ASSIGN expression %prec ASSIGN\nexpression : IDENTIFIER PLUS_ASSIGN expression\n           | IDENTIFIER MINUS_ASSIGN expression\n           | IDENTIFIER TIMES_ASSIGN expression\n           | IDENTIFIER POWER_ASSIGN expression\n           | IDENTIFIER DIVIDE_ASSIGN expression\n           | IDENTIFIER DIVIDE_FLOOR_ASSIGN expression\n           | IDENTIFIER DIVIDE_CEIL_ASSIGN expression\n           | IDENTIFIER GREATER_THAN_ASSIGN expression\n           | IDENTIFIER SMALLER_THAN_ASSIGN expression\n           | IDENTIFIER GREATER_EQUALS_ASSIGN expression\n           | IDENTIFIER SMALLER_EQUALS_ASSIGN expression\n           | IDENTIFIER EQUALS_ASSIGN expression\n           | IDENTIFIER UNEQUALS_ASSIGN expression\n           | IDENTIFIER AND_ASSIGN expression\n           | IDENTIFIER OR_ASSIGN expression\n           | IDENTIFIER XOR_ASSIGN expression\n           | IDENTIFIER EXP_ASSIGN expression\n           | IDENTIFIER MOD_ASSIGN expression\n\nsequence : BEGIN statements END\n         | BEGIN statements SEMICOLON END\nexpression : sequence\nstatement : expression\n\nstatements : statements SEMICOLON statement\n\nstatements : statement\n\nif_statement : IF expression THEN statements DOT\n             | IF expression THEN statements else_elif_body DOT\n\nelse_elif_body : ELIF IF expression THEN statements else_elif_body\n               | ELSE statements\n\nexpression : if_statement\n\nwhile_statement : WHILE expression THEN statements DOT\n\nexpression : while_statement\n\nloop_statement : LOOP IDENTIFIER IN interval LOOPTHEN statements DOT\n\ninterval : OPEN_BRACKETS   expression COMMA expression CLOSED_BRACKETS\n         | CLOSED_BRACKETS expression COMMA expression CLOSED_BRACKETS\n         | OPEN_BRACKETS   expression COMMA expression OPEN_BRACKETS\n         | CLOSED_BRACKETS expression COMMA expression OPEN_BRACKETS\n\nexpression : loop_statement\nlambda : LAMBDA parameter LAMBDA_ARROW expression %prec LAMBDAexpression : lambda\nparameter : LPAREN parameter_pos RPAREN\n          | IDENTIFIER\n          | empty\n\nparameter_pos : parameter_pos_list\n\nparameter_pos_list : IDENTIFIER COMMA parameter_pos_list\n                   | IDENTIFIER\n                   | parameter_keywords\n\nparameter_keywords : parameter_kw_list\n\nparameter_kw_list : IDENTIFIER COLON expression COMMA parameter_kw_list\n                  | IDENTIFIER COLON expression\n                  | parameter_infty\n\nparameter_infty : IDENTIFIER DOTS\n\nparameter_expr : parameter_pos_expr\n               | empty\n\nparameter_pos_expr : expression COMMA parameter_pos_expr\n                   | expression\n                   | parameter_keywords_expr\n\nparameter_keywords_expr : expression COLON expression COMMA parameter_keywords_expr\n                        | expression COLON expression\nempty :expression : expression LPAREN parameter_expr RPARENexpression : LET IDENTIFIER EQUALS expression IN expression DOT\nexpression : ECHO   LPAREN param_list RPAREN\n           | LENGTH LPAREN param_list RPAREN\n           | LIST   LPAREN param_list RPAREN\nparam_list : expression COMMA param_listparam_list : expressionexpression : expression OPEN_BRACKETS DOT CLOSED_BRACKETS\n| expression OPEN_BRACKETS TIMES CLOSED_BRACKETS\n| expression OPEN_BRACKETS expression CLOSED_BRACKETS\nexpression : NULLexpression : expression CONS expressionexpression : OPEN_BRACKETS param_list CLOSED_BRACKETS\n| OPEN_BRACKETS empty      CLOSED_BRACKETS\n'
    
_lr_action_items = {'BEGIN':([0,2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-26,-27,-28,-29,-30,-31,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'$end':([1,31,94,],[0,-51,-52,]),'NOT':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-26,-27,-28,-29,-30,-31,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'MINUS':([2,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,144,145,146,147,149,156,157,158,159,160,161,162,163,164,165,170,171,172,175,178,179,180,182,184,185,186,187,188,190,191,192,193,194,197,198,200,202,203,204,205,206,209,210,213,],[7,34,7,7,7,-22,-25,-4,-53,-61,-63,-69,-71,7,7,-102,-1,-2,-3,7,7,-51,7,7,7,7,7,7,7,7,7,7,7,7,7,-21,7,7,7,7,-26,-27,-28,-29,-30,-31,-20,-19,-18,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,34,7,7,7,34,34,34,-52,-6,-7,-8,-9,-10,-11,-12,-13,34,34,34,-17,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-5,7,-104,-105,7,7,7,7,7,7,-92,-101,-99,-100,34,-94,-95,-96,7,7,34,7,34,7,-57,7,7,-62,7,34,34,34,7,34,-58,7,7,7,34,-93,34,-64,34,34,7,7,7,]),'PLUS':([2,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,144,145,146,147,149,156,157,158,159,160,161,162,163,164,165,170,171,172,175,178,179,180,182,184,185,186,187,188,190,191,192,193,194,197,198,200,202,203,204,205,206,209,210,213,],[6,33,6,6,6,-22,-25,-4,-53,-61,-63,-69,-71,6,6,-102,-1,-2,-3,6,6,-51,6,6,6,6,6,6,6,6,6,6,6,6,6,-21,6,6,6,6,-26,-27,-28,-29,-30,-31,-20,-19,-18,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,33,6,6,6,33,33,33,-52,-6,-7,-8,-9,-10,-11,-12,-13,33,33,33,-17,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-5,6,-104,-105,6,6,6,6,6,6,-92,-101,-99,-100,33,-94,-95,-96,6,6,33,6,33,6,-57,6,6,-62,6,33,33,33,6,33,-58,6,6,6,33,-93,33,-64,33,33,6,6,6,]),'IDENTIFIER':([2,6,7,8,17,18,22,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,91,139,145,146,147,149,156,157,170,171,174,175,179,182,184,186,191,194,197,198,199,209,210,213,],[11,11,11,11,11,80,11,11,11,89,92,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-26,-27,-28,-29,-30,-31,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,152,11,11,11,11,11,11,11,11,11,152,11,11,11,11,11,11,11,11,11,207,11,11,11,]),'LET':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-26,-27,-28,-29,-30,-31,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'ECHO':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-26,-27,-28,-29,-30,-31,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LENGTH':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-26,-27,-28,-29,-30,-31,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LIST':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-26,-27,-28,-29,-30,-31,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'NULL':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-26,-27,-28,-29,-30,-31,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'OPEN_BRACKETS':([2,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,144,145,146,147,148,149,156,157,158,159,160,161,162,163,164,165,170,171,172,175,178,179,180,182,184,185,186,187,188,190,191,192,193,194,197,198,200,202,203,204,205,206,209,210,213,],[22,47,22,22,22,-22,-25,-4,-53,-61,-63,-69,-71,22,22,-102,-1,-2,-3,22,22,-51,22,22,22,22,22,22,22,22,22,22,22,22,22,-21,22,22,22,22,-26,-27,-28,-29,-30,-31,-20,-19,-18,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,47,22,22,22,47,47,47,-52,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,47,47,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,22,-104,-105,22,22,22,170,22,22,22,-92,-101,-99,-100,47,-94,-95,-96,22,22,-70,22,47,22,-57,22,22,-62,22,47,47,47,22,47,-58,22,22,22,47,-93,47,-64,210,213,22,22,22,]),'NUMBER':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-26,-27,-28,-29,-30,-31,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FLOAT':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-26,-27,-28,-29,-30,-31,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'STRING':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-26,-27,-28,-29,-30,-31,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'LPAREN':([2,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,144,145,146,147,149,156,157,158,159,160,161,162,163,164,165,170,171,172,175,178,179,180,182,184,185,186,187,188,190,191,192,193,194,197,198,200,202,203,204,205,206,209,210,213,],[17,46,17,17,17,-22,-25,-4,-53,-61,-63,-69,-71,17,81,82,83,17,-102,-1,-2,-3,17,17,91,-51,17,17,17,17,17,17,17,17,17,17,17,17,17,-21,17,17,17,17,-26,-27,-28,-29,-30,-31,46,46,46,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,46,17,17,17,46,46,46,-52,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-5,17,-104,-105,17,17,17,17,17,17,-92,-101,-99,-100,46,-94,-95,-96,17,17,46,17,46,17,-57,17,17,-62,17,46,46,46,17,46,-58,17,17,17,46,-93,46,-64,46,46,17,17,17,]),'IF':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,183,184,186,191,194,197,198,209,210,213,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-26,-27,-28,-29,-30,-31,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,194,27,27,27,27,27,27,27,27,27,]),'WHILE':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-26,-27,-28,-29,-30,-31,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'LOOP':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-26,-27,-28,-29,-30,-31,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LAMBDA':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-26,-27,-28,-29,-30,-31,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'END':([3,4,5,9,10,11,12,13,14,15,16,23,24,25,26,31,32,45,56,57,58,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,163,164,165,172,180,185,193,202,204,],[31,-56,-54,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,94,-21,-20,-19,-18,-52,-55,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,-104,-105,-92,-101,-99,-100,-94,-95,-96,-70,-57,-62,-58,-93,-64,]),'SEMICOLON':([3,4,5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,163,164,165,167,168,172,180,185,193,195,196,202,204,214,],[32,-56,-54,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,-52,-55,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,-104,-105,-92,-101,-99,-100,-94,-95,-96,182,182,-70,-57,-62,-58,182,182,-93,-64,182,]),'DOT':([4,5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,47,56,57,58,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,163,164,165,167,168,172,180,181,185,192,193,195,196,202,204,210,213,215,],[-56,-54,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,114,-20,-19,-18,-52,-55,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,-104,-105,-92,-101,-99,-100,-94,-95,-96,180,185,-70,-57,193,-62,202,-58,-60,204,-93,-64,114,114,-59,]),'ELIF':([4,5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,163,164,165,167,172,180,185,193,202,204,214,],[-56,-54,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,-52,-55,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,-104,-105,-92,-101,-99,-100,-94,-95,-96,183,-70,-57,-62,-58,-93,-64,183,]),'ELSE':([4,5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,163,164,165,167,172,180,185,193,202,204,214,],[-56,-54,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,-52,-55,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,-104,-105,-92,-101,-99,-100,-94,-95,-96,184,-70,-57,-62,-58,-93,-64,184,]),'TIMES':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,47,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,210,213,],[35,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,115,-20,-19,-18,35,35,35,35,-52,35,35,-8,-9,-10,-11,-12,-13,35,35,35,-17,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-5,-104,-105,-92,-101,-99,-100,35,-94,-95,-96,35,35,-57,-62,35,35,35,35,-58,35,-93,35,-64,35,35,115,115,]),'DIVIDE':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[36,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,36,36,36,36,-52,36,36,-8,-9,-10,-11,-12,-13,36,36,36,-17,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-5,-104,-105,-92,-101,-99,-100,36,-94,-95,-96,36,36,-57,-62,36,36,36,36,-58,36,-93,36,-64,36,36,]),'DIVIDE_CEIL':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[37,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,37,37,37,37,-52,37,37,-8,-9,-10,-11,-12,-13,37,37,37,-17,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-5,-104,-105,-92,-101,-99,-100,37,-94,-95,-96,37,37,-57,-62,37,37,37,37,-58,37,-93,37,-64,37,37,]),'DIVIDE_FLOOR':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[38,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,38,38,38,38,-52,38,38,-8,-9,-10,-11,-12,-13,38,38,38,-17,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-5,-104,-105,-92,-101,-99,-100,38,-94,-95,-96,38,38,-57,-62,38,38,38,38,-58,38,-93,38,-64,38,38,]),'MOD':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[39,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,39,39,39,39,-52,39,39,-8,-9,-10,-11,-12,-13,39,39,39,-17,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-5,-104,-105,-92,-101,-99,-100,39,-94,-95,-96,39,39,-57,-62,39,39,39,39,-58,39,-93,39,-64,39,39,]),'EXP':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[40,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,40,40,40,40,-52,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-5,-104,-105,-92,-101,-99,-100,40,-94,-95,-96,40,40,-57,-62,40,40,40,40,-58,40,-93,40,-64,40,40,]),'AND':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[41,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,41,41,41,41,-52,-6,-7,-8,-9,-10,-11,-12,-13,-14,41,41,-17,41,41,41,-23,-24,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-5,-104,-105,-92,-101,-99,-100,41,-94,-95,-96,41,41,-57,-62,41,41,41,41,-58,41,-93,41,-64,41,41,]),'OR':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[42,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,42,42,42,42,-52,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,42,42,42,-23,-24,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-5,-104,-105,-92,-101,-99,-100,42,-94,-95,-96,42,42,-57,-62,42,42,42,42,-58,42,-93,42,-64,42,42,]),'XOR':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[43,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,43,43,43,43,-52,-6,-7,-8,-9,-10,-11,-12,-13,-14,43,-16,-17,43,43,43,-23,-24,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-5,-104,-105,-92,-101,-99,-100,43,-94,-95,-96,43,43,-57,-62,43,43,43,43,-58,43,-93,43,-64,43,43,]),'POWER':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[44,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,44,44,44,44,-52,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-5,-104,-105,-92,-101,-99,-100,44,-94,-95,-96,44,44,-57,-62,44,44,44,44,-58,44,-93,44,-64,44,44,]),'IMAG':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[45,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,45,45,45,45,-52,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-5,-104,-105,-92,-101,-99,-100,45,-94,-95,-96,45,45,-57,-62,45,45,45,45,-58,45,-93,45,-64,45,45,]),'CONS':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[48,-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,48,48,48,48,-52,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,48,48,-103,-23,-24,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-5,-104,-105,-92,-101,-99,-100,48,-94,-95,-96,-70,48,-57,-62,48,48,48,48,-58,48,-93,48,-64,48,48,]),'GREATER_THAN':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[50,-22,50,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,50,50,50,50,-52,-6,-7,-8,-9,-10,-11,-12,-13,50,50,50,-17,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-5,-104,-105,-92,-101,-99,-100,50,-94,-95,-96,50,50,-57,-62,50,50,50,50,-58,50,-93,50,-64,50,50,]),'SMALLER_THAN':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[51,-22,51,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,51,51,51,51,-52,-6,-7,-8,-9,-10,-11,-12,-13,51,51,51,-17,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-5,-104,-105,-92,-101,-99,-100,51,-94,-95,-96,51,51,-57,-62,51,51,51,51,-58,51,-93,51,-64,51,51,]),'UNEQUALS':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[52,-22,52,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,52,52,52,52,-52,-6,-7,-8,-9,-10,-11,-12,-13,52,52,52,-17,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-5,-104,-105,-92,-101,-99,-100,52,-94,-95,-96,52,52,-57,-62,52,52,52,52,-58,52,-93,52,-64,52,52,]),'EQUALS':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,80,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[53,-22,53,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,53,139,53,53,53,-52,-6,-7,-8,-9,-10,-11,-12,-13,53,53,53,-17,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-5,-104,-105,-92,-101,-99,-100,53,-94,-95,-96,53,53,-57,-62,53,53,53,53,-58,53,-93,53,-64,53,53,]),'SMALLER_EQUALS':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[54,-22,54,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,54,54,54,54,-52,-6,-7,-8,-9,-10,-11,-12,-13,54,54,54,-17,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-5,-104,-105,-92,-101,-99,-100,54,-94,-95,-96,54,54,-57,-62,54,54,54,54,-58,54,-93,54,-64,54,54,]),'GREATER_EQUALS':([5,9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,79,86,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,178,180,185,187,188,190,192,193,200,202,203,204,205,206,],[55,-22,55,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,55,55,55,55,-52,-6,-7,-8,-9,-10,-11,-12,-13,55,55,55,-17,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-5,-104,-105,-92,-101,-99,-100,55,-94,-95,-96,55,55,-57,-62,55,55,55,55,-58,55,-93,55,-64,55,55,]),'RPAREN':([9,10,11,12,13,14,15,16,23,24,25,26,31,45,46,56,57,58,79,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,150,151,152,153,154,155,158,159,160,161,163,164,165,166,172,176,177,178,180,185,189,190,193,201,202,204,208,],[-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-91,-20,-19,-18,138,-98,-52,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-87,158,-84,-85,-88,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,163,164,165,-104,-105,173,-75,-77,-78,-79,-82,-92,-101,-99,-100,-94,-95,-96,-97,-70,-83,-86,-90,-57,-62,-76,-81,-58,-89,-93,-64,-80,]),'COMMA':([9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,152,158,159,160,161,163,164,165,172,178,180,185,187,188,190,193,202,204,],[-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,145,-52,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,156,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,-104,-105,174,-92,-101,-99,-100,-94,-95,-96,-70,191,-57,-62,197,198,199,-58,-93,-64,]),'CLOSED_BRACKETS':([9,10,11,12,13,14,15,16,22,23,24,25,26,31,45,56,57,58,84,85,86,94,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,148,158,159,160,161,163,164,165,166,172,180,185,193,202,204,205,206,],[-22,-25,-4,-53,-61,-63,-69,-71,-91,-102,-1,-2,-3,-51,-21,-20,-19,-18,143,144,-98,-52,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,159,160,161,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,-104,-105,171,-92,-101,-99,-100,-94,-95,-96,-97,-70,-57,-62,-58,-93,-64,211,212,]),'THEN':([9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,87,88,94,96,97,98,99,100,101,102,103,104,105,106,107,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,163,164,165,172,180,185,193,202,203,204,],[-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,146,147,-52,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,-104,-105,-92,-101,-99,-100,-94,-95,-96,-70,-57,-62,-58,-93,209,-64,]),'COLON':([9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,94,96,97,98,99,100,101,102,103,104,105,106,107,108,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,152,158,159,160,161,163,164,165,172,180,185,193,200,202,204,207,],[-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,-52,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,157,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,-104,-105,175,-92,-101,-99,-100,-94,-95,-96,-70,-57,-62,-58,157,-93,-64,175,]),'IN':([9,10,11,12,13,14,15,16,23,24,25,26,31,45,56,57,58,89,94,96,97,98,99,100,101,102,103,104,105,106,107,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,158,159,160,161,162,163,164,165,172,180,185,193,202,204,],[-22,-25,-4,-53,-61,-63,-69,-71,-102,-1,-2,-3,-51,-21,-20,-19,-18,148,-52,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-103,-23,-24,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-5,-104,-105,-92,-101,-99,-100,179,-94,-95,-96,-70,-57,-62,-58,-93,-64,]),'ASSIGN':([11,],[60,]),'PLUS_ASSIGN':([11,],[61,]),'MINUS_ASSIGN':([11,],[62,]),'TIMES_ASSIGN':([11,],[63,]),'POWER_ASSIGN':([11,],[64,]),'DIVIDE_ASSIGN':([11,],[65,]),'DIVIDE_FLOOR_ASSIGN':([11,],[66,]),'DIVIDE_CEIL_ASSIGN':([11,],[67,]),'GREATER_THAN_ASSIGN':([11,],[68,]),'SMALLER_THAN_ASSIGN':([11,],[69,]),'GREATER_EQUALS_ASSIGN':([11,],[70,]),'SMALLER_EQUALS_ASSIGN':([11,],[71,]),'EQUALS_ASSIGN':([11,],[72,]),'UNEQUALS_ASSIGN':([11,],[73,]),'AND_ASSIGN':([11,],[74,]),'OR_ASSIGN':([11,],[75,]),'XOR_ASSIGN':([11,],[76,]),'EXP_ASSIGN':([11,],[77,]),'MOD_ASSIGN':([11,],[78,]),'LAMBDA_ARROW':([30,90,92,93,173,],[-91,149,-73,-74,-72,]),'DOTS':([152,207,],[176,176,]),'LOOPTHEN':([169,210,211,212,213,],[186,-67,-65,-66,-68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sequence':([0,2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'statements':([2,146,147,184,186,209,],[3,167,168,195,196,214,]),'statement':([2,32,146,147,182,184,186,209,],[4,95,4,4,95,4,4,4,]),'expression':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[5,56,57,58,79,86,87,88,5,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,86,86,86,162,86,5,5,172,108,178,187,188,190,192,5,5,5,200,203,205,206,5,113,113,]),'atomar':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'comparison':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'if_statement':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'while_statement':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'loop_statement':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'lambda':([2,6,7,8,17,22,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,139,145,146,147,149,156,157,170,171,175,179,182,184,186,191,194,197,198,209,210,213,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'comparison_op':([5,10,56,57,58,79,86,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,162,172,178,187,188,190,192,200,203,205,206,],[49,59,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'param_list':([22,81,82,83,145,],[84,140,141,142,166,]),'empty':([22,30,46,],[85,93,111,]),'parameter':([30,],[90,]),'parameter_expr':([46,],[109,]),'parameter_pos_expr':([46,156,],[110,177,]),'parameter_keywords_expr':([46,156,191,],[112,112,201,]),'parameter_pos':([91,],[150,]),'parameter_pos_list':([91,174,],[151,189,]),'parameter_keywords':([91,174,],[153,153,]),'parameter_kw_list':([91,174,199,],[154,154,208,]),'parameter_infty':([91,174,199,],[155,155,155,]),'interval':([148,],[169,]),'else_elif_body':([167,214,],[181,215,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sequence","S'",1,None,None,None),
  ('atomar -> NUMBER','atomar',1,'p_number','parser.py',39),
  ('atomar -> FLOAT','atomar',1,'p_float','parser.py',44),
  ('atomar -> STRING','atomar',1,'p_string','parser.py',49),
  ('atomar -> IDENTIFIER','atomar',1,'p_var','parser.py',54),
  ('atomar -> LPAREN expression RPAREN','atomar',3,'p_paran','parser.py',59),
  ('expression -> expression PLUS expression','expression',3,'p_arithmetic_expression','parser.py',67),
  ('expression -> expression MINUS expression','expression',3,'p_arithmetic_expression','parser.py',68),
  ('expression -> expression TIMES expression','expression',3,'p_arithmetic_expression','parser.py',69),
  ('expression -> expression DIVIDE expression','expression',3,'p_arithmetic_expression','parser.py',70),
  ('expression -> expression DIVIDE_CEIL expression','expression',3,'p_arithmetic_expression','parser.py',71),
  ('expression -> expression DIVIDE_FLOOR expression','expression',3,'p_arithmetic_expression','parser.py',72),
  ('expression -> expression MOD expression','expression',3,'p_arithmetic_expression','parser.py',73),
  ('expression -> expression EXP expression','expression',3,'p_arithmetic_expression','parser.py',74),
  ('expression -> expression AND expression','expression',3,'p_arithmetic_expression','parser.py',75),
  ('expression -> expression OR expression','expression',3,'p_arithmetic_expression','parser.py',76),
  ('expression -> expression XOR expression','expression',3,'p_arithmetic_expression','parser.py',77),
  ('expression -> expression POWER expression','expression',3,'p_arithmetic_expression','parser.py',78),
  ('expression -> NOT expression','expression',2,'p_unary','parser.py',84),
  ('expression -> MINUS expression','expression',2,'p_unary','parser.py',85),
  ('expression -> PLUS expression','expression',2,'p_unary','parser.py',86),
  ('expression -> expression IMAG','expression',2,'p_complex','parser.py',91),
  ('expression -> atomar','expression',1,'p_expression','parser.py',96),
  ('comparison -> expression comparison_op expression','comparison',3,'p_expression_comparison_chain1','parser.py',105),
  ('comparison -> comparison comparison_op expression','comparison',3,'p_expression_comparison_chain2','parser.py',113),
  ('expression -> comparison','expression',1,'p_expression1','parser.py',119),
  ('comparison_op -> GREATER_THAN','comparison_op',1,'p_comparison_op','parser.py',124),
  ('comparison_op -> SMALLER_THAN','comparison_op',1,'p_comparison_op','parser.py',125),
  ('comparison_op -> UNEQUALS','comparison_op',1,'p_comparison_op','parser.py',126),
  ('comparison_op -> EQUALS','comparison_op',1,'p_comparison_op','parser.py',127),
  ('comparison_op -> SMALLER_EQUALS','comparison_op',1,'p_comparison_op','parser.py',128),
  ('comparison_op -> GREATER_EQUALS','comparison_op',1,'p_comparison_op','parser.py',129),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_assignment1','parser.py',137),
  ('expression -> IDENTIFIER PLUS_ASSIGN expression','expression',3,'p_assignment2','parser.py',143),
  ('expression -> IDENTIFIER MINUS_ASSIGN expression','expression',3,'p_assignment2','parser.py',144),
  ('expression -> IDENTIFIER TIMES_ASSIGN expression','expression',3,'p_assignment2','parser.py',145),
  ('expression -> IDENTIFIER POWER_ASSIGN expression','expression',3,'p_assignment2','parser.py',146),
  ('expression -> IDENTIFIER DIVIDE_ASSIGN expression','expression',3,'p_assignment2','parser.py',147),
  ('expression -> IDENTIFIER DIVIDE_FLOOR_ASSIGN expression','expression',3,'p_assignment2','parser.py',148),
  ('expression -> IDENTIFIER DIVIDE_CEIL_ASSIGN expression','expression',3,'p_assignment2','parser.py',149),
  ('expression -> IDENTIFIER GREATER_THAN_ASSIGN expression','expression',3,'p_assignment2','parser.py',150),
  ('expression -> IDENTIFIER SMALLER_THAN_ASSIGN expression','expression',3,'p_assignment2','parser.py',151),
  ('expression -> IDENTIFIER GREATER_EQUALS_ASSIGN expression','expression',3,'p_assignment2','parser.py',152),
  ('expression -> IDENTIFIER SMALLER_EQUALS_ASSIGN expression','expression',3,'p_assignment2','parser.py',153),
  ('expression -> IDENTIFIER EQUALS_ASSIGN expression','expression',3,'p_assignment2','parser.py',154),
  ('expression -> IDENTIFIER UNEQUALS_ASSIGN expression','expression',3,'p_assignment2','parser.py',155),
  ('expression -> IDENTIFIER AND_ASSIGN expression','expression',3,'p_assignment2','parser.py',156),
  ('expression -> IDENTIFIER OR_ASSIGN expression','expression',3,'p_assignment2','parser.py',157),
  ('expression -> IDENTIFIER XOR_ASSIGN expression','expression',3,'p_assignment2','parser.py',158),
  ('expression -> IDENTIFIER EXP_ASSIGN expression','expression',3,'p_assignment2','parser.py',159),
  ('expression -> IDENTIFIER MOD_ASSIGN expression','expression',3,'p_assignment2','parser.py',160),
  ('sequence -> BEGIN statements END','sequence',3,'p_sequence','parser.py',170),
  ('sequence -> BEGIN statements SEMICOLON END','sequence',4,'p_sequence','parser.py',171),
  ('expression -> sequence','expression',1,'p_expression2','parser.py',177),
  ('statement -> expression','statement',1,'p_statement0','parser.py',186),
  ('statements -> statements SEMICOLON statement','statements',3,'p_statements0','parser.py',193),
  ('statements -> statement','statements',1,'p_statements1','parser.py',200),
  ('if_statement -> IF expression THEN statements DOT','if_statement',5,'p_if_statements1','parser.py',210),
  ('if_statement -> IF expression THEN statements else_elif_body DOT','if_statement',6,'p_if_statements1','parser.py',211),
  ('else_elif_body -> ELIF IF expression THEN statements else_elif_body','else_elif_body',6,'p_if_statements2','parser.py',221),
  ('else_elif_body -> ELSE statements','else_elif_body',2,'p_if_statements2','parser.py',222),
  ('expression -> if_statement','expression',1,'p_if_statements3','parser.py',232),
  ('while_statement -> WHILE expression THEN statements DOT','while_statement',5,'p_while_statement0','parser.py',242),
  ('expression -> while_statement','expression',1,'p_while_statement1','parser.py',249),
  ('loop_statement -> LOOP IDENTIFIER IN interval LOOPTHEN statements DOT','loop_statement',7,'p_loop_statement0','parser.py',259),
  ('interval -> OPEN_BRACKETS expression COMMA expression CLOSED_BRACKETS','interval',5,'p_interval','parser.py',266),
  ('interval -> CLOSED_BRACKETS expression COMMA expression CLOSED_BRACKETS','interval',5,'p_interval','parser.py',267),
  ('interval -> OPEN_BRACKETS expression COMMA expression OPEN_BRACKETS','interval',5,'p_interval','parser.py',268),
  ('interval -> CLOSED_BRACKETS expression COMMA expression OPEN_BRACKETS','interval',5,'p_interval','parser.py',269),
  ('expression -> loop_statement','expression',1,'p_loop_statement1','parser.py',276),
  ('lambda -> LAMBDA parameter LAMBDA_ARROW expression','lambda',4,'p_lambda0','parser.py',285),
  ('expression -> lambda','expression',1,'p_lambda1','parser.py',290),
  ('parameter -> LPAREN parameter_pos RPAREN','parameter',3,'p_parameter0','parser.py',296),
  ('parameter -> IDENTIFIER','parameter',1,'p_parameter0','parser.py',297),
  ('parameter -> empty','parameter',1,'p_parameter0','parser.py',298),
  ('parameter_pos -> parameter_pos_list','parameter_pos',1,'p_parameter1','parser.py',310),
  ('parameter_pos_list -> IDENTIFIER COMMA parameter_pos_list','parameter_pos_list',3,'p_parameter2','parser.py',317),
  ('parameter_pos_list -> IDENTIFIER','parameter_pos_list',1,'p_parameter2','parser.py',318),
  ('parameter_pos_list -> parameter_keywords','parameter_pos_list',1,'p_parameter2','parser.py',319),
  ('parameter_keywords -> parameter_kw_list','parameter_keywords',1,'p_parameter3','parser.py',331),
  ('parameter_kw_list -> IDENTIFIER COLON expression COMMA parameter_kw_list','parameter_kw_list',5,'p_parameter4','parser.py',338),
  ('parameter_kw_list -> IDENTIFIER COLON expression','parameter_kw_list',3,'p_parameter4','parser.py',339),
  ('parameter_kw_list -> parameter_infty','parameter_kw_list',1,'p_parameter4','parser.py',340),
  ('parameter_infty -> IDENTIFIER DOTS','parameter_infty',2,'p_parameter5','parser.py',352),
  ('parameter_expr -> parameter_pos_expr','parameter_expr',1,'p_parameter6','parser.py',359),
  ('parameter_expr -> empty','parameter_expr',1,'p_parameter6','parser.py',360),
  ('parameter_pos_expr -> expression COMMA parameter_pos_expr','parameter_pos_expr',3,'p_parameter7','parser.py',367),
  ('parameter_pos_expr -> expression','parameter_pos_expr',1,'p_parameter7','parser.py',368),
  ('parameter_pos_expr -> parameter_keywords_expr','parameter_pos_expr',1,'p_parameter7','parser.py',369),
  ('parameter_keywords_expr -> expression COLON expression COMMA parameter_keywords_expr','parameter_keywords_expr',5,'p_parameter8','parser.py',381),
  ('parameter_keywords_expr -> expression COLON expression','parameter_keywords_expr',3,'p_parameter8','parser.py',382),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',391),
  ('expression -> expression LPAREN parameter_expr RPAREN','expression',4,'p_call','parser.py',396),
  ('expression -> LET IDENTIFIER EQUALS expression IN expression DOT','expression',7,'p_let','parser.py',405),
  ('expression -> ECHO LPAREN param_list RPAREN','expression',4,'p_builtin_func','parser.py',414),
  ('expression -> LENGTH LPAREN param_list RPAREN','expression',4,'p_builtin_func','parser.py',415),
  ('expression -> LIST LPAREN param_list RPAREN','expression',4,'p_builtin_func','parser.py',416),
  ('param_list -> expression COMMA param_list','param_list',3,'p_paramlist1','parser.py',422),
  ('param_list -> expression','param_list',1,'p_paramlist2','parser.py',427),
  ('expression -> expression OPEN_BRACKETS DOT CLOSED_BRACKETS','expression',4,'p_list_zugriff','parser.py',450),
  ('expression -> expression OPEN_BRACKETS TIMES CLOSED_BRACKETS','expression',4,'p_list_zugriff','parser.py',451),
  ('expression -> expression OPEN_BRACKETS expression CLOSED_BRACKETS','expression',4,'p_list_zugriff','parser.py',452),
  ('expression -> NULL','expression',1,'p_leere_liste','parser.py',459),
  ('expression -> expression CONS expression','expression',3,'p_cons','parser.py',464),
  ('expression -> OPEN_BRACKETS param_list CLOSED_BRACKETS','expression',3,'p_array','parser.py',472),
  ('expression -> OPEN_BRACKETS empty CLOSED_BRACKETS','expression',3,'p_array','parser.py',473),
]
