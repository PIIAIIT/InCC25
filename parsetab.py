
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'sequencerightASSIGNPLUS_ASSIGNMINUS_ASSIGNPOWER_ASSIGNTIMES_ASSIGNDIVIDE_CEIL_ASSIGNDIVIDE_FLOOR_ASSIGNDIVIDE_ASSIGNEQUALS_ASSIGNUNEQUALS_ASSIGNGREATER_EQUALS_ASSIGNSMALLER_EQUALS_ASSIGNGREATER_THAN_ASSIGNSMALLER_THAN_ASSIGNAND_ASSIGNOR_ASSIGNXOR_ASSIGNMOD_ASSIGNEXP_ASSIGNleftORleftXORleftANDleftEQUALSUNEQUALSleftGREATER_THANSMALLER_THANSMALLER_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDEDIVIDE_CEILDIVIDE_FLOORMODrightPOWEREXPleftIMAGrightNOTUPLUSUMINUSrightLPARENAND AND_ASSIGN ASSIGN BEGIN CLOSED_BRACKETS COLON COMMA CONST DIVIDE DIVIDE_ASSIGN DIVIDE_CEIL DIVIDE_CEIL_ASSIGN DIVIDE_FLOOR DIVIDE_FLOOR_ASSIGN DOT DOTS ECHO ELIF ELSE END EQUALS EQUALS_ASSIGN EXP EXP_ASSIGN FLOAT GREATER_EQUALS GREATER_EQUALS_ASSIGN GREATER_THAN GREATER_THAN_ASSIGN IDENTIFIER IF IMAG IN LAMBDA LAMBDA_ARROW LENGTH LET LIST LOOP LOOPTHEN LPAREN MINUS MINUS_ASSIGN MOD MOD_ASSIGN NOT NUMBER OPEN_BRACKETS OR OR_ASSIGN PLUS PLUS_ASSIGN POWER POWER_ASSIGN RPAREN SEMICOLON SMALLER_EQUALS SMALLER_EQUALS_ASSIGN SMALLER_THAN SMALLER_THAN_ASSIGN STRING THEN TIMES TIMES_ASSIGN UNEQUALS UNEQUALS_ASSIGN WHILE XOR XOR_ASSIGNatomar : NUMBERatomar : FLOATatomar : STRINGatomar : IDENTIFIERatomar : LPAREN expression RPARENexpression : arithmetic_expressionarithmetic_expression : arithmetic_expression PLUS arithmetic_expression\n| arithmetic_expression MINUS arithmetic_expression\n| arithmetic_expression TIMES arithmetic_expression\n| arithmetic_expression DIVIDE arithmetic_expression\n| arithmetic_expression DIVIDE_CEIL arithmetic_expression\n| arithmetic_expression DIVIDE_FLOOR arithmetic_expression\n| arithmetic_expression MOD arithmetic_expression\n| arithmetic_expression EXP arithmetic_expression\n| arithmetic_expression AND arithmetic_expression\n| arithmetic_expression OR arithmetic_expression\n| arithmetic_expression XOR arithmetic_expression\n| arithmetic_expression POWER arithmetic_expression\narithmetic_expression : NOT   arithmetic_expression\n| MINUS arithmetic_expression %prec UMINUS\n| PLUS  arithmetic_expression %prec UPLUSarithmetic_expression : arithmetic_expression IMAGarithmetic_expression : atomar\ncomparison : arithmetic_expression comparison_op arithmetic_expression comparison_chain\n\ncomparison : arithmetic_expression comparison_op arithmetic_expression\n\ncomparison_chain : comparison_op arithmetic_expression comparison_chain\n\ncomparison_chain : comparison_op arithmetic_expression\ncomparison_op : GREATER_THAN\n| SMALLER_THAN\n| UNEQUALS\n| EQUALS\n| SMALLER_EQUALS\n| GREATER_EQUALSexpression : comparisonexpression : IDENTIFIER ASSIGN expression %prec ASSIGN\nexpression : IDENTIFIER PLUS_ASSIGN expression\n           | IDENTIFIER MINUS_ASSIGN expression\n           | IDENTIFIER TIMES_ASSIGN expression\n           | IDENTIFIER POWER_ASSIGN expression\n           | IDENTIFIER DIVIDE_ASSIGN expression\n           | IDENTIFIER DIVIDE_FLOOR_ASSIGN expression\n           | IDENTIFIER DIVIDE_CEIL_ASSIGN expression\n           | IDENTIFIER GREATER_THAN_ASSIGN expression\n           | IDENTIFIER SMALLER_THAN_ASSIGN expression\n           | IDENTIFIER GREATER_EQUALS_ASSIGN expression\n           | IDENTIFIER SMALLER_EQUALS_ASSIGN expression\n           | IDENTIFIER EQUALS_ASSIGN expression\n           | IDENTIFIER UNEQUALS_ASSIGN expression\n           | IDENTIFIER AND_ASSIGN expression\n           | IDENTIFIER OR_ASSIGN expression\n           | IDENTIFIER XOR_ASSIGN expression\n           | IDENTIFIER EXP_ASSIGN expression\n           | IDENTIFIER MOD_ASSIGN expression\n\nsequence : BEGIN statements END\n         | BEGIN statements SEMICOLON END\nexpression : sequence\nstatement : expression\n          | if_statement\n          | while_statement\n          | loop_statement\n\nstatements : statements SEMICOLON statement\n\nstatements : statement\n\nif_statement : IF expression THEN statements DOT\n             | IF expression THEN statements else_elif_body DOT\n\nelse_elif_body : ELIF IF expression THEN statements else_elif_body\n               | ELSE statements\n\nwhile_statement : WHILE expression THEN statements DOT\n\nloop_statement : LOOP IDENTIFIER IN interval LOOPTHEN statements DOT\n\ninterval : OPEN_BRACKETS   expression COMMA expression CLOSED_BRACKETS\n         | CLOSED_BRACKETS expression COMMA expression CLOSED_BRACKETS\n         | OPEN_BRACKETS   expression COMMA expression OPEN_BRACKETS\n         | CLOSED_BRACKETS expression COMMA expression OPEN_BRACKETS\nlambda : LAMBDA parameter LAMBDA_ARROW expressionexpression : lambda\nparameter : LPAREN parameter_pos RPAREN\n          | IDENTIFIER\n          | empty\n\nparameter_pos : parameter_pos_list\n\nparameter_pos_list : IDENTIFIER COMMA parameter_pos_list\n                   | IDENTIFIER\n                   | parameter_keywords\n\nparameter_keywords : parameter_kw_list\n\nparameter_kw_list : IDENTIFIER COLON expression COMMA parameter_kw_list\n                  | IDENTIFIER COLON expression\n                  | parameter_infty\n\nparameter_infty : IDENTIFIER DOTS\n\nparameter_expr : parameter_pos_expr\n               | empty\n\nparameter_pos_expr : expression COMMA parameter_pos_expr\n                   | expression\n                   | parameter_keywords_expr\n\nparameter_keywords_expr : expression COLON expression COMMA parameter_keywords_expr\n                        | expression COLON expression\nempty :expression : atomar LPAREN parameter_expr RPARENexpression : LET IDENTIFIER EQUALS expression IN expression DOT\nexpression : ECHO   LPAREN param_list RPAREN\n           | LENGTH LPAREN param_list RPAREN\n           | LIST   LPAREN param_list RPAREN\nparam_list : expression COMMA param_listparam_list : expressionlist_parameter : expression list_parameterlist_parameter : expressionexpression : list_parameterexpression : OPEN_BRACKETS param_list CLOSED_BRACKETS\n| OPEN_BRACKETS empty      CLOSED_BRACKETS\n'
    
_lr_action_items = {'BEGIN':([0,2,5,9,10,11,12,13,14,15,20,21,22,23,29,30,31,32,33,34,35,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[2,2,2,-6,-34,-4,-56,-74,-23,2,-104,2,2,2,-1,-2,-3,-54,2,2,-102,-22,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,2,-5,2,-105,-106,2,2,2,2,-24,-95,2,2,2,-97,-98,-99,2,2,2,2,-27,2,2,2,2,2,2,2,2,-26,2,2,2,2,2,2,-96,2,2,2,2,2,2,]),'$end':([1,32,96,],[0,-54,-55,]),'IDENTIFIER':([2,5,9,10,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,93,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,153,154,155,156,157,158,159,160,161,166,167,168,170,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,197,198,200,201,203,204,207,208,211,],[11,11,-6,-34,-4,-56,-74,-23,11,77,-104,11,11,11,86,89,89,89,94,-1,-2,-3,-54,11,11,-102,89,89,89,89,89,89,89,89,89,89,89,89,-22,89,-28,-29,-30,-31,-32,-33,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-21,-23,-4,-20,-19,149,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,11,-5,11,-105,-106,11,11,11,11,89,-24,-95,11,11,11,-97,-98,-99,11,11,11,149,11,-27,11,11,11,11,11,11,11,11,-26,11,11,11,11,11,205,11,-96,11,11,11,11,11,11,]),'LET':([2,5,9,10,11,12,13,14,15,20,21,22,23,29,30,31,32,33,34,35,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[16,16,-6,-34,-4,-56,-74,-23,16,-104,16,16,16,-1,-2,-3,-54,16,16,-102,-22,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,16,-5,16,-105,-106,16,16,16,16,-24,-95,16,16,16,-97,-98,-99,16,16,16,16,-27,16,16,16,16,16,16,16,16,-26,16,16,16,16,16,16,-96,16,16,16,16,16,16,]),'ECHO':([2,5,9,10,11,12,13,14,15,20,21,22,23,29,30,31,32,33,34,35,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[17,17,-6,-34,-4,-56,-74,-23,17,-104,17,17,17,-1,-2,-3,-54,17,17,-102,-22,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,17,-5,17,-105,-106,17,17,17,17,-24,-95,17,17,17,-97,-98,-99,17,17,17,17,-27,17,17,17,17,17,17,17,17,-26,17,17,17,17,17,17,-96,17,17,17,17,17,17,]),'LENGTH':([2,5,9,10,11,12,13,14,15,20,21,22,23,29,30,31,32,33,34,35,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[18,18,-6,-34,-4,-56,-74,-23,18,-104,18,18,18,-1,-2,-3,-54,18,18,-102,-22,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,18,-5,18,-105,-106,18,18,18,18,-24,-95,18,18,18,-97,-98,-99,18,18,18,18,-27,18,18,18,18,18,18,18,18,-26,18,18,18,18,18,18,-96,18,18,18,18,18,18,]),'LIST':([2,5,9,10,11,12,13,14,15,20,21,22,23,29,30,31,32,33,34,35,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[19,19,-6,-34,-4,-56,-74,-23,19,-104,19,19,19,-1,-2,-3,-54,19,19,-102,-22,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,19,-5,19,-105,-106,19,19,19,19,-24,-95,19,19,19,-97,-98,-99,19,19,19,19,-27,19,19,19,19,19,19,19,19,-26,19,19,19,19,19,19,-96,19,19,19,19,19,19,]),'OPEN_BRACKETS':([2,5,9,10,11,12,13,14,15,20,21,22,23,29,30,31,32,33,34,35,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,145,146,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[21,21,-6,-34,-4,-56,-74,-23,21,-104,21,21,21,-1,-2,-3,-54,21,21,-102,-22,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,21,-5,21,-105,-106,21,21,21,166,21,-24,-95,21,21,21,-97,-98,-99,21,21,21,21,-27,21,21,21,21,21,21,21,21,-26,21,21,21,21,21,21,-96,21,208,211,21,21,21,]),'IF':([2,33,143,144,179,180,181,183,207,],[22,22,22,22,22,192,22,22,22,]),'WHILE':([2,33,143,144,179,181,183,207,],[23,23,23,23,23,23,23,23,]),'LOOP':([2,33,143,144,179,181,183,207,],[24,24,24,24,24,24,24,24,]),'NOT':([2,5,9,10,11,12,13,14,15,20,21,22,23,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,153,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[27,27,-6,-34,-4,-56,-74,-23,27,-104,27,27,27,27,27,27,-1,-2,-3,-54,27,27,-102,27,27,27,27,27,27,27,27,27,27,27,27,-22,27,-28,-29,-30,-31,-32,-33,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-5,27,-105,-106,27,27,27,27,27,-24,-95,27,27,27,-97,-98,-99,27,27,27,27,-27,27,27,27,27,27,27,27,27,-26,27,27,27,27,27,27,-96,27,27,27,27,27,27,]),'MINUS':([2,5,9,10,11,12,13,14,15,20,21,22,23,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,153,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[26,26,37,-34,-4,-56,-74,-23,26,-104,26,26,26,26,26,26,-1,-2,-3,-54,26,26,-102,26,26,26,26,26,26,26,26,26,26,26,26,-22,26,-28,-29,-30,-31,-32,-33,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,37,37,37,-18,37,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-5,26,-105,-106,26,26,26,26,26,-24,-95,26,26,26,-97,-98,-99,26,26,26,26,37,26,26,26,26,26,26,26,26,-26,26,26,26,26,26,26,-96,26,26,26,26,26,26,]),'PLUS':([2,5,9,10,11,12,13,14,15,20,21,22,23,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,153,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[25,25,36,-34,-4,-56,-74,-23,25,-104,25,25,25,25,25,25,-1,-2,-3,-54,25,25,-102,25,25,25,25,25,25,25,25,25,25,25,25,-22,25,-28,-29,-30,-31,-32,-33,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,36,36,36,-18,36,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-5,25,-105,-106,25,25,25,25,25,-24,-95,25,25,25,-97,-98,-99,25,25,25,25,36,25,25,25,25,25,25,25,25,-26,25,25,25,25,25,25,-96,25,25,25,25,25,25,]),'LAMBDA':([2,5,9,10,11,12,13,14,15,20,21,22,23,29,30,31,32,33,34,35,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[28,28,-6,-34,-4,-56,-74,-23,28,-104,28,28,28,-1,-2,-3,-54,28,28,-102,-22,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,28,-5,28,-105,-106,28,28,28,28,-24,-95,28,28,28,-97,-98,-99,28,28,28,28,-27,28,28,28,28,28,28,28,28,-26,28,28,28,28,28,28,-96,28,28,28,28,28,28,]),'NUMBER':([2,5,9,10,11,12,13,14,15,20,21,22,23,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,153,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[29,29,-6,-34,-4,-56,-74,-23,29,-104,29,29,29,29,29,29,-1,-2,-3,-54,29,29,-102,29,29,29,29,29,29,29,29,29,29,29,29,-22,29,-28,-29,-30,-31,-32,-33,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,29,-5,29,-105,-106,29,29,29,29,29,-24,-95,29,29,29,-97,-98,-99,29,29,29,29,-27,29,29,29,29,29,29,29,29,-26,29,29,29,29,29,29,-96,29,29,29,29,29,29,]),'FLOAT':([2,5,9,10,11,12,13,14,15,20,21,22,23,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,153,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[30,30,-6,-34,-4,-56,-74,-23,30,-104,30,30,30,30,30,30,-1,-2,-3,-54,30,30,-102,30,30,30,30,30,30,30,30,30,30,30,30,-22,30,-28,-29,-30,-31,-32,-33,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,30,-5,30,-105,-106,30,30,30,30,30,-24,-95,30,30,30,-97,-98,-99,30,30,30,30,-27,30,30,30,30,30,30,30,30,-26,30,30,30,30,30,30,-96,30,30,30,30,30,30,]),'STRING':([2,5,9,10,11,12,13,14,15,20,21,22,23,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,153,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[31,31,-6,-34,-4,-56,-74,-23,31,-104,31,31,31,31,31,31,-1,-2,-3,-54,31,31,-102,31,31,31,31,31,31,31,31,31,31,31,31,-22,31,-28,-29,-30,-31,-32,-33,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,31,-5,31,-105,-106,31,31,31,31,31,-24,-95,31,31,31,-97,-98,-99,31,31,31,31,-27,31,31,31,31,31,31,31,31,-26,31,31,31,31,31,31,-96,31,31,31,31,31,31,]),'LPAREN':([2,5,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,136,140,141,142,143,144,146,153,154,155,156,157,158,159,160,161,166,167,168,171,173,175,176,179,181,183,184,185,187,188,189,190,192,195,196,198,200,201,203,204,207,208,211,],[15,15,-6,-34,-4,-56,-74,75,15,78,79,80,-104,15,15,15,15,15,15,93,-1,-2,-3,-54,15,15,-102,15,15,15,15,15,15,15,15,15,15,15,15,-22,15,-28,-29,-30,-31,-32,-33,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-5,15,-105,-106,15,15,15,15,15,-24,-95,15,15,15,-97,-98,-99,15,15,15,15,-27,15,15,15,15,15,15,15,15,-26,15,15,15,15,15,15,-96,15,15,15,15,15,15,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,20,29,30,31,32,33,34,35,48,87,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,141,154,155,159,160,161,168,173,177,182,188,191,200,202,],[32,-62,-57,-58,-59,-60,-6,-34,-4,-56,-74,-23,-104,-1,-2,-3,-54,96,-103,-102,-22,-21,-23,-4,-20,-19,-55,-61,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-5,-105,-106,-24,-95,-97,-98,-99,-73,-27,-63,-67,-26,-64,-96,-68,]),'SEMICOLON':([3,4,5,6,7,8,9,10,11,12,13,14,20,29,30,31,32,34,35,48,87,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,141,154,155,159,160,161,163,164,168,173,177,182,188,191,193,194,200,202,212,],[33,-62,-57,-58,-59,-60,-6,-34,-4,-56,-74,-23,-104,-1,-2,-3,-54,-103,-102,-22,-21,-23,-4,-20,-19,-55,-61,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-5,-105,-106,-24,-95,-97,-98,-99,179,179,-73,-27,-63,-67,-26,-64,179,179,-96,-68,179,]),'DOT':([4,5,6,7,8,9,10,11,12,13,14,20,29,30,31,32,34,35,48,87,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,141,154,155,159,160,161,163,164,168,173,177,178,182,188,190,191,193,194,200,202,213,],[-62,-57,-58,-59,-60,-6,-34,-4,-56,-74,-23,-104,-1,-2,-3,-54,-103,-102,-22,-21,-23,-4,-20,-19,-55,-61,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-5,-105,-106,-24,-95,-97,-98,-99,177,182,-73,-27,-63,191,-67,-26,200,-64,-66,202,-96,-68,-65,]),'ELIF':([4,5,6,7,8,9,10,11,12,13,14,20,29,30,31,32,34,35,48,87,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,141,154,155,159,160,161,163,168,173,177,182,188,191,200,202,212,],[-62,-57,-58,-59,-60,-6,-34,-4,-56,-74,-23,-104,-1,-2,-3,-54,-103,-102,-22,-21,-23,-4,-20,-19,-55,-61,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-5,-105,-106,-24,-95,-97,-98,-99,180,-73,-27,-63,-67,-26,-64,-96,-68,180,]),'ELSE':([4,5,6,7,8,9,10,11,12,13,14,20,29,30,31,32,34,35,48,87,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,141,154,155,159,160,161,163,168,173,177,182,188,191,200,202,212,],[-62,-57,-58,-59,-60,-6,-34,-4,-56,-74,-23,-104,-1,-2,-3,-54,-103,-102,-22,-21,-23,-4,-20,-19,-55,-61,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-5,-105,-106,-24,-95,-97,-98,-99,181,-73,-27,-63,-67,-26,-64,-96,-68,181,]),'RPAREN':([9,10,11,12,13,14,20,29,30,31,32,34,35,48,75,76,83,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,147,148,149,150,151,152,154,155,159,160,161,162,168,172,173,174,175,186,187,188,199,200,206,],[-6,-34,-4,-56,-74,-23,-104,-1,-2,-3,-54,-103,-102,-22,-94,135,-101,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,155,-87,-88,-90,-91,-5,159,160,161,-105,-106,169,-78,-80,-81,-82,-85,-24,-95,-97,-98,-99,-100,-73,-86,-27,-89,-93,-79,-84,-26,-92,-96,-83,]),'COMMA':([9,10,11,12,13,14,20,29,30,31,32,34,35,48,83,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,140,141,149,154,155,159,160,161,168,173,175,184,185,187,188,200,],[-6,-34,-4,-56,-74,-23,-104,-1,-2,-3,-54,-103,-102,-22,142,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,156,-5,-105,-106,170,-24,-95,-97,-98,-99,-73,-27,189,195,196,197,-26,-96,]),'CLOSED_BRACKETS':([9,10,11,12,13,14,20,21,29,30,31,32,34,35,48,81,82,83,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,141,145,154,155,159,160,161,162,168,173,188,200,203,204,208,211,],[-6,-34,-4,-56,-74,-23,-104,-94,-1,-2,-3,-54,-103,-102,-22,140,141,-101,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-5,-105,-106,167,-24,-95,-97,-98,-99,-100,-73,-27,-26,-96,209,210,-94,-94,]),'THEN':([9,10,11,12,13,14,20,29,30,31,32,34,35,48,84,85,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,141,154,155,159,160,161,168,173,188,200,201,],[-6,-34,-4,-56,-74,-23,-104,-1,-2,-3,-54,-103,-102,-22,143,144,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-5,-105,-106,-24,-95,-97,-98,-99,-73,-27,-26,-96,207,]),'COLON':([9,10,11,12,13,14,20,29,30,31,32,34,35,48,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,135,140,141,149,154,155,159,160,161,168,173,188,198,200,205,],[-6,-34,-4,-56,-74,-23,-104,-1,-2,-3,-54,-103,-102,-22,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,157,-5,-105,-106,171,-24,-95,-97,-98,-99,-73,-27,-26,157,-96,171,]),'IN':([9,10,11,12,13,14,20,29,30,31,32,34,35,48,86,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,141,154,155,158,159,160,161,168,173,188,200,],[-6,-34,-4,-56,-74,-23,-104,-1,-2,-3,-54,-103,-102,-22,145,-21,-23,-4,-20,-19,-55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-25,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-5,-105,-106,-24,-95,176,-97,-98,-99,-73,-27,-26,-96,]),'TIMES':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[38,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,38,38,-9,-10,-11,-12,-13,-14,38,38,38,-18,38,-5,38,]),'DIVIDE':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[39,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,39,39,-9,-10,-11,-12,-13,-14,39,39,39,-18,39,-5,39,]),'DIVIDE_CEIL':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[40,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,40,40,-9,-10,-11,-12,-13,-14,40,40,40,-18,40,-5,40,]),'DIVIDE_FLOOR':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[41,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,41,41,-9,-10,-11,-12,-13,-14,41,41,41,-18,41,-5,41,]),'MOD':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[42,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,42,42,-9,-10,-11,-12,-13,-14,42,42,42,-18,42,-5,42,]),'EXP':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[43,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,43,43,43,43,43,43,43,43,43,43,43,43,43,-5,43,]),'AND':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[44,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,44,44,-18,44,-5,44,]),'OR':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[45,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,45,-5,45,]),'XOR':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[46,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,46,-17,-18,46,-5,46,]),'POWER':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[47,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,47,47,47,47,47,47,47,47,47,47,47,47,47,-5,47,]),'IMAG':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[48,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,48,48,48,48,48,48,48,48,48,48,48,48,48,-5,48,]),'GREATER_THAN':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[50,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,50,-5,50,]),'SMALLER_THAN':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[51,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,51,-5,51,]),'UNEQUALS':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[52,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,52,-5,52,]),'EQUALS':([9,11,14,29,30,31,48,77,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[53,-4,-23,-1,-2,-3,-22,136,-21,-23,-4,-20,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,53,-5,53,]),'SMALLER_EQUALS':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[54,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,54,-5,54,]),'GREATER_EQUALS':([9,11,14,29,30,31,48,87,88,89,90,91,98,99,100,101,102,103,104,105,106,107,108,109,110,135,173,],[55,-4,-23,-1,-2,-3,-22,-21,-23,-4,-20,-19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,55,-5,55,]),'ASSIGN':([11,],[56,]),'PLUS_ASSIGN':([11,],[57,]),'MINUS_ASSIGN':([11,],[58,]),'TIMES_ASSIGN':([11,],[59,]),'POWER_ASSIGN':([11,],[60,]),'DIVIDE_ASSIGN':([11,],[61,]),'DIVIDE_FLOOR_ASSIGN':([11,],[62,]),'DIVIDE_CEIL_ASSIGN':([11,],[63,]),'GREATER_THAN_ASSIGN':([11,],[64,]),'SMALLER_THAN_ASSIGN':([11,],[65,]),'GREATER_EQUALS_ASSIGN':([11,],[66,]),'SMALLER_EQUALS_ASSIGN':([11,],[67,]),'EQUALS_ASSIGN':([11,],[68,]),'UNEQUALS_ASSIGN':([11,],[69,]),'AND_ASSIGN':([11,],[70,]),'OR_ASSIGN':([11,],[71,]),'XOR_ASSIGN':([11,],[72,]),'EXP_ASSIGN':([11,],[73,]),'MOD_ASSIGN':([11,],[74,]),'LAMBDA_ARROW':([28,92,94,95,169,],[-94,146,-76,-77,-75,]),'DOTS':([149,205,],[172,172,]),'LOOPTHEN':([165,208,209,210,211,],[183,-71,-69,-70,-72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sequence':([0,2,5,15,21,22,23,33,34,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,136,142,143,144,146,156,157,158,166,167,168,171,175,176,179,181,183,184,185,187,189,190,192,195,196,198,201,203,204,207,208,211,],[1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'statements':([2,143,144,181,183,207,],[3,163,164,193,194,212,]),'statement':([2,33,143,144,179,181,183,207,],[4,97,4,4,97,4,4,4,]),'expression':([2,5,15,21,22,23,33,34,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,136,142,143,144,146,156,157,158,166,167,168,171,175,176,179,181,183,184,185,187,189,190,192,195,196,198,201,203,204,207,208,211,],[5,34,76,83,84,85,5,34,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,34,83,83,83,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,158,83,5,5,168,133,175,34,184,185,34,187,34,190,5,5,5,34,34,34,198,34,201,203,204,34,34,34,34,5,83,83,]),'if_statement':([2,33,143,144,179,181,183,207,],[6,6,6,6,6,6,6,6,]),'while_statement':([2,33,143,144,179,181,183,207,],[7,7,7,7,7,7,7,7,]),'loop_statement':([2,33,143,144,179,181,183,207,],[8,8,8,8,8,8,8,8,]),'arithmetic_expression':([2,5,15,21,22,23,25,26,27,33,34,36,37,38,39,40,41,42,43,44,45,46,47,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,136,142,143,144,146,153,156,157,158,166,167,168,171,175,176,179,181,183,184,185,187,189,190,192,195,196,198,201,203,204,207,208,211,],[9,9,9,9,9,9,87,90,91,9,9,98,99,100,101,102,103,104,105,106,107,108,109,110,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,173,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'comparison':([2,5,15,21,22,23,33,34,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,136,142,143,144,146,156,157,158,166,167,168,171,175,176,179,181,183,184,185,187,189,190,192,195,196,198,201,203,204,207,208,211,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'lambda':([2,5,15,21,22,23,33,34,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,136,142,143,144,146,156,157,158,166,167,168,171,175,176,179,181,183,184,185,187,189,190,192,195,196,198,201,203,204,207,208,211,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'atomar':([2,5,15,21,22,23,25,26,27,33,34,36,37,38,39,40,41,42,43,44,45,46,47,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,136,142,143,144,146,153,156,157,158,166,167,168,171,175,176,179,181,183,184,185,187,189,190,192,195,196,198,201,203,204,207,208,211,],[14,14,14,14,14,14,88,88,88,14,14,88,88,88,88,88,88,88,88,88,88,88,88,88,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,88,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'list_parameter':([2,5,15,21,22,23,33,34,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,83,84,85,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,136,142,143,144,146,156,157,158,166,167,168,171,175,176,179,181,183,184,185,187,189,190,192,195,196,198,201,203,204,207,208,211,],[20,35,20,20,20,20,20,35,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,35,20,20,20,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,20,20,20,20,20,20,20,35,20,20,35,20,35,20,20,20,20,35,35,35,20,35,20,20,20,35,35,35,35,20,20,20,]),'comparison_op':([9,110,173,],[49,153,153,]),'param_list':([21,78,79,80,142,208,211,],[81,137,138,139,162,81,81,]),'empty':([21,28,75,208,211,],[82,95,132,82,82,]),'parameter':([28,],[92,]),'parameter_expr':([75,],[130,]),'parameter_pos_expr':([75,156,],[131,174,]),'parameter_keywords_expr':([75,156,189,],[134,134,199,]),'parameter_pos':([93,],[147,]),'parameter_pos_list':([93,170,],[148,186,]),'parameter_keywords':([93,170,],[150,150,]),'parameter_kw_list':([93,170,197,],[151,151,206,]),'parameter_infty':([93,170,197,],[152,152,152,]),'comparison_chain':([110,173,],[154,188,]),'interval':([145,],[165,]),'else_elif_body':([163,212,],[178,213,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sequence","S'",1,None,None,None),
  ('atomar -> NUMBER','atomar',1,'p_number','parser.py',39),
  ('atomar -> FLOAT','atomar',1,'p_float','parser.py',44),
  ('atomar -> STRING','atomar',1,'p_string','parser.py',49),
  ('atomar -> IDENTIFIER','atomar',1,'p_var','parser.py',54),
  ('atomar -> LPAREN expression RPAREN','atomar',3,'p_paran','parser.py',59),
  ('expression -> arithmetic_expression','expression',1,'p_expression0','parser.py',67),
  ('arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',75),
  ('arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',76),
  ('arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',77),
  ('arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',78),
  ('arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',79),
  ('arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',80),
  ('arithmetic_expression -> arithmetic_expression MOD arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',81),
  ('arithmetic_expression -> arithmetic_expression EXP arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',82),
  ('arithmetic_expression -> arithmetic_expression AND arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',83),
  ('arithmetic_expression -> arithmetic_expression OR arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',84),
  ('arithmetic_expression -> arithmetic_expression XOR arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',85),
  ('arithmetic_expression -> arithmetic_expression POWER arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',86),
  ('arithmetic_expression -> NOT arithmetic_expression','arithmetic_expression',2,'p_unary','parser.py',92),
  ('arithmetic_expression -> MINUS arithmetic_expression','arithmetic_expression',2,'p_unary','parser.py',93),
  ('arithmetic_expression -> PLUS arithmetic_expression','arithmetic_expression',2,'p_unary','parser.py',94),
  ('arithmetic_expression -> arithmetic_expression IMAG','arithmetic_expression',2,'p_complex','parser.py',99),
  ('arithmetic_expression -> atomar','arithmetic_expression',1,'p_arithmetic_end','parser.py',104),
  ('comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain','comparison',4,'p_expression_comparison_chain1','parser.py',113),
  ('comparison -> arithmetic_expression comparison_op arithmetic_expression','comparison',3,'p_expression_comparison_chain2','parser.py',120),
  ('comparison_chain -> comparison_op arithmetic_expression comparison_chain','comparison_chain',3,'p_comparison_chain1','parser.py',127),
  ('comparison_chain -> comparison_op arithmetic_expression','comparison_chain',2,'p_comparison_chain2','parser.py',134),
  ('comparison_op -> GREATER_THAN','comparison_op',1,'p_comparison_op','parser.py',140),
  ('comparison_op -> SMALLER_THAN','comparison_op',1,'p_comparison_op','parser.py',141),
  ('comparison_op -> UNEQUALS','comparison_op',1,'p_comparison_op','parser.py',142),
  ('comparison_op -> EQUALS','comparison_op',1,'p_comparison_op','parser.py',143),
  ('comparison_op -> SMALLER_EQUALS','comparison_op',1,'p_comparison_op','parser.py',144),
  ('comparison_op -> GREATER_EQUALS','comparison_op',1,'p_comparison_op','parser.py',145),
  ('expression -> comparison','expression',1,'p_expression1','parser.py',150),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_assignment1','parser.py',158),
  ('expression -> IDENTIFIER PLUS_ASSIGN expression','expression',3,'p_assignment2','parser.py',164),
  ('expression -> IDENTIFIER MINUS_ASSIGN expression','expression',3,'p_assignment2','parser.py',165),
  ('expression -> IDENTIFIER TIMES_ASSIGN expression','expression',3,'p_assignment2','parser.py',166),
  ('expression -> IDENTIFIER POWER_ASSIGN expression','expression',3,'p_assignment2','parser.py',167),
  ('expression -> IDENTIFIER DIVIDE_ASSIGN expression','expression',3,'p_assignment2','parser.py',168),
  ('expression -> IDENTIFIER DIVIDE_FLOOR_ASSIGN expression','expression',3,'p_assignment2','parser.py',169),
  ('expression -> IDENTIFIER DIVIDE_CEIL_ASSIGN expression','expression',3,'p_assignment2','parser.py',170),
  ('expression -> IDENTIFIER GREATER_THAN_ASSIGN expression','expression',3,'p_assignment2','parser.py',171),
  ('expression -> IDENTIFIER SMALLER_THAN_ASSIGN expression','expression',3,'p_assignment2','parser.py',172),
  ('expression -> IDENTIFIER GREATER_EQUALS_ASSIGN expression','expression',3,'p_assignment2','parser.py',173),
  ('expression -> IDENTIFIER SMALLER_EQUALS_ASSIGN expression','expression',3,'p_assignment2','parser.py',174),
  ('expression -> IDENTIFIER EQUALS_ASSIGN expression','expression',3,'p_assignment2','parser.py',175),
  ('expression -> IDENTIFIER UNEQUALS_ASSIGN expression','expression',3,'p_assignment2','parser.py',176),
  ('expression -> IDENTIFIER AND_ASSIGN expression','expression',3,'p_assignment2','parser.py',177),
  ('expression -> IDENTIFIER OR_ASSIGN expression','expression',3,'p_assignment2','parser.py',178),
  ('expression -> IDENTIFIER XOR_ASSIGN expression','expression',3,'p_assignment2','parser.py',179),
  ('expression -> IDENTIFIER EXP_ASSIGN expression','expression',3,'p_assignment2','parser.py',180),
  ('expression -> IDENTIFIER MOD_ASSIGN expression','expression',3,'p_assignment2','parser.py',181),
  ('sequence -> BEGIN statements END','sequence',3,'p_sequence','parser.py',191),
  ('sequence -> BEGIN statements SEMICOLON END','sequence',4,'p_sequence','parser.py',192),
  ('expression -> sequence','expression',1,'p_expression2','parser.py',198),
  ('statement -> expression','statement',1,'p_statement0','parser.py',207),
  ('statement -> if_statement','statement',1,'p_statement0','parser.py',208),
  ('statement -> while_statement','statement',1,'p_statement0','parser.py',209),
  ('statement -> loop_statement','statement',1,'p_statement0','parser.py',210),
  ('statements -> statements SEMICOLON statement','statements',3,'p_statements0','parser.py',217),
  ('statements -> statement','statements',1,'p_statements1','parser.py',224),
  ('if_statement -> IF expression THEN statements DOT','if_statement',5,'p_if_statements1','parser.py',234),
  ('if_statement -> IF expression THEN statements else_elif_body DOT','if_statement',6,'p_if_statements1','parser.py',235),
  ('else_elif_body -> ELIF IF expression THEN statements else_elif_body','else_elif_body',6,'p_if_statements2','parser.py',245),
  ('else_elif_body -> ELSE statements','else_elif_body',2,'p_if_statements2','parser.py',246),
  ('while_statement -> WHILE expression THEN statements DOT','while_statement',5,'p_while_statement','parser.py',259),
  ('loop_statement -> LOOP IDENTIFIER IN interval LOOPTHEN statements DOT','loop_statement',7,'p_loop_statement','parser.py',269),
  ('interval -> OPEN_BRACKETS expression COMMA expression CLOSED_BRACKETS','interval',5,'p_interval','parser.py',276),
  ('interval -> CLOSED_BRACKETS expression COMMA expression CLOSED_BRACKETS','interval',5,'p_interval','parser.py',277),
  ('interval -> OPEN_BRACKETS expression COMMA expression OPEN_BRACKETS','interval',5,'p_interval','parser.py',278),
  ('interval -> CLOSED_BRACKETS expression COMMA expression OPEN_BRACKETS','interval',5,'p_interval','parser.py',279),
  ('lambda -> LAMBDA parameter LAMBDA_ARROW expression','lambda',4,'p_lambda0','parser.py',288),
  ('expression -> lambda','expression',1,'p_lambda1','parser.py',293),
  ('parameter -> LPAREN parameter_pos RPAREN','parameter',3,'p_parameter0','parser.py',299),
  ('parameter -> IDENTIFIER','parameter',1,'p_parameter0','parser.py',300),
  ('parameter -> empty','parameter',1,'p_parameter0','parser.py',301),
  ('parameter_pos -> parameter_pos_list','parameter_pos',1,'p_parameter1','parser.py',311),
  ('parameter_pos_list -> IDENTIFIER COMMA parameter_pos_list','parameter_pos_list',3,'p_parameter2','parser.py',318),
  ('parameter_pos_list -> IDENTIFIER','parameter_pos_list',1,'p_parameter2','parser.py',319),
  ('parameter_pos_list -> parameter_keywords','parameter_pos_list',1,'p_parameter2','parser.py',320),
  ('parameter_keywords -> parameter_kw_list','parameter_keywords',1,'p_parameter3','parser.py',332),
  ('parameter_kw_list -> IDENTIFIER COLON expression COMMA parameter_kw_list','parameter_kw_list',5,'p_parameter4','parser.py',339),
  ('parameter_kw_list -> IDENTIFIER COLON expression','parameter_kw_list',3,'p_parameter4','parser.py',340),
  ('parameter_kw_list -> parameter_infty','parameter_kw_list',1,'p_parameter4','parser.py',341),
  ('parameter_infty -> IDENTIFIER DOTS','parameter_infty',2,'p_parameter5','parser.py',353),
  ('parameter_expr -> parameter_pos_expr','parameter_expr',1,'p_parameter6','parser.py',360),
  ('parameter_expr -> empty','parameter_expr',1,'p_parameter6','parser.py',361),
  ('parameter_pos_expr -> expression COMMA parameter_pos_expr','parameter_pos_expr',3,'p_parameter7','parser.py',368),
  ('parameter_pos_expr -> expression','parameter_pos_expr',1,'p_parameter7','parser.py',369),
  ('parameter_pos_expr -> parameter_keywords_expr','parameter_pos_expr',1,'p_parameter7','parser.py',370),
  ('parameter_keywords_expr -> expression COLON expression COMMA parameter_keywords_expr','parameter_keywords_expr',5,'p_parameter8','parser.py',380),
  ('parameter_keywords_expr -> expression COLON expression','parameter_keywords_expr',3,'p_parameter8','parser.py',381),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',390),
  ('expression -> atomar LPAREN parameter_expr RPAREN','expression',4,'p_call','parser.py',395),
  ('expression -> LET IDENTIFIER EQUALS expression IN expression DOT','expression',7,'p_let','parser.py',404),
  ('expression -> ECHO LPAREN param_list RPAREN','expression',4,'p_builtin_func','parser.py',413),
  ('expression -> LENGTH LPAREN param_list RPAREN','expression',4,'p_builtin_func','parser.py',414),
  ('expression -> LIST LPAREN param_list RPAREN','expression',4,'p_builtin_func','parser.py',415),
  ('param_list -> expression COMMA param_list','param_list',3,'p_paramlist1','parser.py',421),
  ('param_list -> expression','param_list',1,'p_paramlist2','parser.py',426),
  ('list_parameter -> expression list_parameter','list_parameter',2,'p_list_param0','parser.py',434),
  ('list_parameter -> expression','list_parameter',1,'p_list_param1','parser.py',439),
  ('expression -> list_parameter','expression',1,'p_list_param2','parser.py',444),
  ('expression -> OPEN_BRACKETS param_list CLOSED_BRACKETS','expression',3,'p_array','parser.py',452),
  ('expression -> OPEN_BRACKETS empty CLOSED_BRACKETS','expression',3,'p_array','parser.py',453),
]
