
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'sequencerightASSIGNleftORleftXORleftANDleftEQUALSUNEQUALSnonassocGREATER_THANSMALLER_THANSMALLER_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDEDIVIDE_CEILDIVIDE_FLOORMODrightPOWEREXPleftPOSTINCPOSTDECIMAGrightNOTUPLUSUMINUSAND ASSIGN BEGIN DIVIDE DIVIDE_CEIL DIVIDE_FLOOR END EQUALS EXP FLOAT GREATER_EQUALS GREATER_THAN IDENTIFIER IMAG LPAREN MINUS MOD NOT NUMBER OR PLUS RPAREN SEMICOLON SMALLER_EQUALS SMALLER_THAN TIMES UNEQUALS XORatomar : NUMBERatomar : FLOATatomar : IDENTIFIERatomar : LPAREN expression RPARENexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression DIVIDE_CEIL expression\n| expression DIVIDE_FLOOR expression\n| expression MOD expression\n| expression EXP expression\n| expression AND expression\n| expression OR expression\n| expression XOR expression\n| expression GREATER_THAN   expression\n| expression SMALLER_THAN   expression\n| expression SMALLER_EQUALS expression\n| expression GREATER_EQUALS expression\n| expression EQUALS         expression\n| expression UNEQUALS    expression\n| atomar\ncomparator : cmp expressioncmp : GREATER_THAN\n| SMALLER_THAN\n| SMALLER_EQUALS\n| GREATER_EQUALS\n| EQUALS\n| UNEQUALScomparator : comparator comparatorexpression : expression comparatorexpression : expression PLUS PLUS %prec POSTINC\n| expression MINUS MINUS %prec POSTDEC\nexpression : expression TIMES TIMES expression %prec POWERexpression : NOT expression\n| MINUS expression %prec UMINUS\n| PLUS expression %prec UPLUSexpression : expression IMAGexpression : IDENTIFIER ASSIGN expression\nsequence : BEGIN body END\n         | BEGIN body SEMICOLON END\nbody : expressionbody : body SEMICOLON expression'
    
_lr_action_items = {'BEGIN':([0,],[2,]),'$end':([1,13,40,],[0,-40,-41,]),'NOT':([2,5,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,38,43,45,47,63,64,65,66,67,68,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-24,-25,-26,-27,-28,-29,]),'MINUS':([2,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,],[6,16,6,6,-22,6,-3,-1,-2,6,6,6,45,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-31,-38,6,-37,-36,-35,6,16,16,-5,-32,-6,-33,-7,6,-8,-9,-10,-11,-12,16,16,16,16,16,16,16,16,16,-30,-24,-25,-26,-27,-28,-29,16,16,-4,-34,]),'PLUS':([2,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,],[5,15,5,5,-22,5,-3,-1,-2,5,5,43,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-31,-38,5,-37,-36,-35,5,15,15,-5,-32,-6,-33,-7,5,-8,-9,-10,-11,-12,15,15,15,15,15,15,15,15,15,-30,-24,-25,-26,-27,-28,-29,15,15,-4,-34,]),'IDENTIFIER':([2,5,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,38,43,45,47,63,64,65,66,67,68,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-24,-25,-26,-27,-28,-29,9,9,9,9,9,-24,-25,-26,-27,-28,-29,]),'NUMBER':([2,5,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,38,43,45,47,63,64,65,66,67,68,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-24,-25,-26,-27,-28,-29,10,10,10,10,10,-24,-25,-26,-27,-28,-29,]),'FLOAT':([2,5,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,38,43,45,47,63,64,65,66,67,68,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-24,-25,-26,-27,-28,-29,11,11,11,11,11,-24,-25,-26,-27,-28,-29,]),'LPAREN':([2,5,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,38,43,45,47,63,64,65,66,67,68,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-24,-25,-26,-27,-28,-29,12,12,12,12,12,-24,-25,-26,-27,-28,-29,]),'END':([3,4,7,9,10,11,14,32,33,35,36,37,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[13,-42,-22,-3,-1,-2,40,-31,-38,-37,-36,-35,-43,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-30,-23,-39,-4,-34,]),'SEMICOLON':([3,4,7,9,10,11,32,33,35,36,37,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[14,-42,-22,-3,-1,-2,-31,-38,-37,-36,-35,-43,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-30,-23,-39,-4,-34,]),'TIMES':([4,7,9,10,11,17,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[17,-22,-3,-1,-2,47,-31,-38,-37,-36,-35,17,17,17,-32,17,-33,-7,-8,-9,-10,-11,-12,17,17,17,17,17,17,17,17,17,-30,17,17,-4,-34,]),'DIVIDE':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[18,-22,-3,-1,-2,-31,-38,-37,-36,-35,18,18,18,-32,18,-33,-7,-8,-9,-10,-11,-12,18,18,18,18,18,18,18,18,18,-30,18,18,-4,-34,]),'DIVIDE_CEIL':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[19,-22,-3,-1,-2,-31,-38,-37,-36,-35,19,19,19,-32,19,-33,-7,-8,-9,-10,-11,-12,19,19,19,19,19,19,19,19,19,-30,19,19,-4,-34,]),'DIVIDE_FLOOR':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[20,-22,-3,-1,-2,-31,-38,-37,-36,-35,20,20,20,-32,20,-33,-7,-8,-9,-10,-11,-12,20,20,20,20,20,20,20,20,20,-30,20,20,-4,-34,]),'MOD':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[21,-22,-3,-1,-2,-31,-38,-37,-36,-35,21,21,21,-32,21,-33,-7,-8,-9,-10,-11,-12,21,21,21,21,21,21,21,21,21,-30,21,21,-4,-34,]),'EXP':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[22,-22,-3,-1,-2,-31,-38,-37,-36,-35,22,22,22,-32,22,-33,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-30,22,22,-4,22,]),'AND':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[23,-22,-3,-1,-2,-31,-38,-37,-36,-35,23,23,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,-13,23,23,-16,-17,-18,-19,-20,-21,-30,23,23,-4,-34,]),'OR':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[24,-22,-3,-1,-2,-31,-38,-37,-36,-35,24,24,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-30,24,24,-4,-34,]),'XOR':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[25,-22,-3,-1,-2,-31,-38,-37,-36,-35,25,25,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,-13,25,-15,-16,-17,-18,-19,-20,-21,-30,25,25,-4,-34,]),'GREATER_THAN':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[26,-22,-3,-1,-2,63,-38,-37,-36,-35,26,26,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,26,26,26,26,26,26,26,26,26,63,26,26,-4,-34,]),'SMALLER_THAN':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[27,-22,-3,-1,-2,64,-38,-37,-36,-35,27,27,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,27,27,27,27,27,27,27,27,27,64,27,27,-4,-34,]),'SMALLER_EQUALS':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[28,-22,-3,-1,-2,65,-38,-37,-36,-35,28,28,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,28,28,28,28,28,28,28,28,28,65,28,28,-4,-34,]),'GREATER_EQUALS':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[29,-22,-3,-1,-2,66,-38,-37,-36,-35,29,29,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,29,29,29,29,29,29,29,29,29,66,29,29,-4,-34,]),'EQUALS':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[30,-22,-3,-1,-2,67,-38,-37,-36,-35,30,30,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,30,30,30,-16,-17,-18,-19,-20,-21,67,30,30,-4,-34,]),'UNEQUALS':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[31,-22,-3,-1,-2,68,-38,-37,-36,-35,31,31,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,31,31,31,-16,-17,-18,-19,-20,-21,68,31,31,-4,-34,]),'IMAG':([4,7,9,10,11,32,33,35,36,37,39,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[33,-22,-3,-1,-2,-31,-38,-37,-36,-35,33,33,33,-32,33,-33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-30,33,33,-4,33,]),'RPAREN':([7,9,10,11,32,33,35,36,37,39,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,71,72,],[-22,-3,-1,-2,-31,-38,-37,-36,-35,71,-5,-32,-6,-33,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-30,-23,-39,-4,-34,]),'ASSIGN':([9,],[38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sequence':([0,],[1,]),'body':([2,],[3,]),'expression':([2,5,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,38,43,45,47,],[4,35,36,37,39,41,42,44,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,69,70,35,36,72,]),'atomar':([2,5,6,8,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,38,43,45,47,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'comparator':([4,32,35,36,37,39,41,42,44,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,72,],[32,62,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,62,32,32,32,]),'cmp':([4,32,35,36,37,39,41,42,44,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,72,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sequence","S'",1,None,None,None),
  ('atomar -> NUMBER','atomar',1,'p_number','parser.py',34),
  ('atomar -> FLOAT','atomar',1,'p_float','parser.py',39),
  ('atomar -> IDENTIFIER','atomar',1,'p_var','parser.py',44),
  ('atomar -> LPAREN expression RPAREN','atomar',3,'p_paran','parser.py',49),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',54),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',55),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',56),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',57),
  ('expression -> expression DIVIDE_CEIL expression','expression',3,'p_expression','parser.py',58),
  ('expression -> expression DIVIDE_FLOOR expression','expression',3,'p_expression','parser.py',59),
  ('expression -> expression MOD expression','expression',3,'p_expression','parser.py',60),
  ('expression -> expression EXP expression','expression',3,'p_expression','parser.py',61),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',62),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',63),
  ('expression -> expression XOR expression','expression',3,'p_expression','parser.py',64),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression','parser.py',65),
  ('expression -> expression SMALLER_THAN expression','expression',3,'p_expression','parser.py',66),
  ('expression -> expression SMALLER_EQUALS expression','expression',3,'p_expression','parser.py',67),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression','parser.py',68),
  ('expression -> expression EQUALS expression','expression',3,'p_expression','parser.py',69),
  ('expression -> expression UNEQUALS expression','expression',3,'p_expression','parser.py',70),
  ('expression -> atomar','expression',1,'p_expression','parser.py',71),
  ('comparator -> cmp expression','comparator',2,'p_comp','parser.py',81),
  ('cmp -> GREATER_THAN','cmp',1,'p_cmp','parser.py',86),
  ('cmp -> SMALLER_THAN','cmp',1,'p_cmp','parser.py',87),
  ('cmp -> SMALLER_EQUALS','cmp',1,'p_cmp','parser.py',88),
  ('cmp -> GREATER_EQUALS','cmp',1,'p_cmp','parser.py',89),
  ('cmp -> EQUALS','cmp',1,'p_cmp','parser.py',90),
  ('cmp -> UNEQUALS','cmp',1,'p_cmp','parser.py',91),
  ('comparator -> comparator comparator','comparator',2,'p_compare_extr','parser.py',96),
  ('expression -> expression comparator','expression',2,'p_compare_exp','parser.py',102),
  ('expression -> expression PLUS PLUS','expression',3,'p_expr_postfix','parser.py',158),
  ('expression -> expression MINUS MINUS','expression',3,'p_expr_postfix','parser.py',159),
  ('expression -> expression TIMES TIMES expression','expression',4,'p_expr_power','parser.py',165),
  ('expression -> NOT expression','expression',2,'p_unary','parser.py',170),
  ('expression -> MINUS expression','expression',2,'p_unary','parser.py',171),
  ('expression -> PLUS expression','expression',2,'p_unary','parser.py',172),
  ('expression -> expression IMAG','expression',2,'p_complex','parser.py',177),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_assign','parser.py',182),
  ('sequence -> BEGIN body END','sequence',3,'p_sequence','parser.py',188),
  ('sequence -> BEGIN body SEMICOLON END','sequence',4,'p_sequence','parser.py',189),
  ('body -> expression','body',1,'p_body1','parser.py',195),
  ('body -> body SEMICOLON expression','body',3,'p_body2','parser.py',200),
]
