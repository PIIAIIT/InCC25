Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> sequence
Rule 1     atomar -> NUMBER
Rule 2     atomar -> FLOAT
Rule 3     atomar -> IDENTIFIER
Rule 4     arithmetic_expression -> LPAREN expression RPAREN
Rule 5     expression -> arithmetic_expression
Rule 6     expression -> comparison
Rule 7     arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression
Rule 8     arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression
Rule 9     arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression
Rule 10    arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression
Rule 11    arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression
Rule 12    arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression
Rule 13    arithmetic_expression -> arithmetic_expression MOD arithmetic_expression
Rule 14    arithmetic_expression -> arithmetic_expression EXP arithmetic_expression
Rule 15    arithmetic_expression -> arithmetic_expression AND arithmetic_expression
Rule 16    arithmetic_expression -> arithmetic_expression OR arithmetic_expression
Rule 17    arithmetic_expression -> arithmetic_expression XOR arithmetic_expression
Rule 18    arithmetic_expression -> arithmetic_expression POWER arithmetic_expression
Rule 19    arithmetic_expression -> NOT arithmetic_expression
Rule 20    arithmetic_expression -> MINUS arithmetic_expression
Rule 21    arithmetic_expression -> PLUS arithmetic_expression
Rule 22    arithmetic_expression -> arithmetic_expression IMAG
Rule 23    arithmetic_expression -> atomar
Rule 24    comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain
Rule 25    comparison -> arithmetic_expression comparison_op arithmetic_expression
Rule 26    comparison_chain -> comparison_op arithmetic_expression comparison_chain
Rule 27    comparison_chain -> comparison_op arithmetic_expression
Rule 28    comparison_op -> GREATER_THAN
Rule 29    comparison_op -> SMALLER_THAN
Rule 30    comparison_op -> UNEQUALS
Rule 31    comparison_op -> EQUALS
Rule 32    comparison_op -> SMALLER_EQUALS
Rule 33    comparison_op -> GREATER_EQUALS
Rule 34    expression -> IDENTIFIER ASSIGN expression
Rule 35    expression -> IDENTIFIER PLUSASSIGN expression
Rule 36    expression -> IDENTIFIER MINUSASSIGN expression
Rule 37    expression -> IDENTIFIER TIMESASSIGN expression
Rule 38    expression -> IDENTIFIER POWERASSIGN expression
Rule 39    expression -> IDENTIFIER DIVIDEASSIGN expression
Rule 40    expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression
Rule 41    expression -> IDENTIFIER DIVIDE_CEILASSIGN expression
Rule 42    expression -> IDENTIFIER GREATER_THANASSIGN expression
Rule 43    expression -> IDENTIFIER SMALLER_THANASSIGN expression
Rule 44    expression -> IDENTIFIER GREATER_EQUALSASSIGN expression
Rule 45    expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression
Rule 46    expression -> IDENTIFIER EQUALSASSIGN expression
Rule 47    expression -> IDENTIFIER UNEQUALSASSIGN expression
Rule 48    expression -> IDENTIFIER ANDASSIGN expression
Rule 49    expression -> IDENTIFIER ORASSIGN expression
Rule 50    expression -> IDENTIFIER XORASSIGN expression
Rule 51    expression -> IDENTIFIER EXPASSIGN expression
Rule 52    expression -> IDENTIFIER MODASSIGN expression
Rule 53    sequence -> BEGIN statements END
Rule 54    sequence -> BEGIN statements SEMICOLON END
Rule 55    statement -> expression
Rule 56    statement -> sequence
Rule 57    statement -> if_statement
Rule 58    statement -> while_statement
Rule 59    statement -> loop_statement
Rule 60    statements -> statement
Rule 61    statements -> statements SEMICOLON statement
Rule 62    statements -> if_statement statement
Rule 63    statements -> while_statement statement
Rule 64    statements -> loop_statement statement
Rule 65    if_statement -> IF expression THEN statements ENDCOND
Rule 66    if_statement -> IF expression THEN statements else_elif_body ENDCOND
Rule 67    else_elif_body -> ELIF IF expression THEN statements else_elif_body
Rule 68    else_elif_body -> ELSE statements
Rule 69    while_statement -> WHILE expression THEN statements ENDCOND
Rule 70    loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
Rule 71    interval -> OPEN_BRACKETS expression COMMA expression CLOSED_BRACKETS
Rule 72    interval -> CLOSED_BRACKETS expression COMMA expression CLOSED_BRACKETS
Rule 73    interval -> OPEN_BRACKETS expression COMMA expression OPEN_BRACKETS
Rule 74    interval -> CLOSED_BRACKETS expression COMMA expression OPEN_BRACKETS
Rule 75    expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
Rule 76    parameter -> expression COMMA parameter
Rule 77    parameter -> expression
Rule 78    parameter -> parameter_keywords
Rule 79    parameter_keywords -> expression COLON expression COMMA parameter_keywords
Rule 80    parameter_keywords -> expression COLON expression
Rule 81    parameter_keywords -> parameter_infty
Rule 82    parameter_infty -> expression DOTS
Rule 83    parameter_infty -> <empty>
Rule 84    expression -> expression LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 15
ANDASSIGN            : 48
ASSIGN               : 34
BEGIN                : 53 54
CLOSED_BRACKETS      : 71 72 72 74
COLON                : 79 80
COMMA                : 71 72 73 74 76 79
DIVIDE               : 10
DIVIDEASSIGN         : 39
DIVIDE_CEIL          : 11
DIVIDE_CEILASSIGN    : 41
DIVIDE_FLOOR         : 12
DIVIDE_FLOORASSIGN   : 40
DOTS                 : 82
ELIF                 : 67
ELSE                 : 68
END                  : 53 54
ENDCOND              : 65 66 69 70
EQUALS               : 31
EQUALSASSIGN         : 46
EXP                  : 14
EXPASSIGN            : 51
FLOAT                : 2
GREATER_EQUALS       : 33
GREATER_EQUALSASSIGN : 44
GREATER_THAN         : 28
GREATER_THANASSIGN   : 42
IDENTIFIER           : 3 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 70
IF                   : 65 66 67
IMAG                 : 22
LAMBDA               : 75
LAMBDA_ARROW         : 75
LOOP                 : 70
LOOPIN               : 70
LOOPTHEN             : 70
LPAREN               : 4 75 84
MINUS                : 8 20
MINUSASSIGN          : 36
MOD                  : 13
MODASSIGN            : 52
NOT                  : 19
NUMBER               : 1
OPEN_BRACKETS        : 71 73 73 74
OR                   : 16
ORASSIGN             : 49
PLUS                 : 7 21
PLUSASSIGN           : 35
POWER                : 18
POWERASSIGN          : 38
RPAREN               : 4 75 84
SEMICOLON            : 54 61
SMALLER_EQUALS       : 32
SMALLER_EQUALSASSIGN : 45
SMALLER_THAN         : 29
SMALLER_THANASSIGN   : 43
THEN                 : 65 66 67 69
TIMES                : 9
TIMESASSIGN          : 37
UNEQUALS             : 30
UNEQUALSASSIGN       : 47
WHILE                : 69
XOR                  : 17
XORASSIGN            : 50
error                : 

Nonterminals, with rules where they appear

arithmetic_expression : 5 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 20 21 22 24 24 25 25 26 27
atomar               : 23
comparison           : 6
comparison_chain     : 24 26
comparison_op        : 24 25 26 27
else_elif_body       : 66 67
expression           : 4 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 55 65 66 67 69 71 71 72 72 73 73 74 74 75 76 77 79 79 80 80 82 84 84
if_statement         : 57 62
interval             : 70
loop_statement       : 59 64
parameter            : 75 76
parameter_infty      : 81
parameter_keywords   : 78 79
sequence             : 56 0
statement            : 60 61 62 63 64
statements           : 53 54 61 65 66 67 68 69 70
while_statement      : 58 63

Parsing method: LALR

state 0

    (0) S' -> . sequence
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END

    BEGIN           shift and go to state 2

    sequence                       shift and go to state 1

state 1

    (0) S' -> sequence .



state 2

    (53) sequence -> BEGIN . statements END
    (54) sequence -> BEGIN . statements SEMICOLON END
    (60) statements -> . statement
    (61) statements -> . statements SEMICOLON statement
    (62) statements -> . if_statement statement
    (63) statements -> . while_statement statement
    (64) statements -> . loop_statement statement
    (55) statement -> . expression
    (56) statement -> . sequence
    (57) statement -> . if_statement
    (58) statement -> . while_statement
    (59) statement -> . loop_statement
    (65) if_statement -> . IF expression THEN statements ENDCOND
    (66) if_statement -> . IF expression THEN statements else_elif_body ENDCOND
    (69) while_statement -> . WHILE expression THEN statements ENDCOND
    (70) loop_statement -> . LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IF              shift and go to state 10
    WHILE           shift and go to state 11
    LOOP            shift and go to state 12
    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    BEGIN           shift and go to state 2
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    statements                     shift and go to state 3
    statement                      shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    loop_statement                 shift and go to state 7
    expression                     shift and go to state 8
    sequence                       shift and go to state 9
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 3

    (53) sequence -> BEGIN statements . END
    (54) sequence -> BEGIN statements . SEMICOLON END
    (61) statements -> statements . SEMICOLON statement

    END             shift and go to state 24
    SEMICOLON       shift and go to state 25


state 4

    (60) statements -> statement .

    END             reduce using rule 60 (statements -> statement .)
    SEMICOLON       reduce using rule 60 (statements -> statement .)
    ENDCOND         reduce using rule 60 (statements -> statement .)
    ELIF            reduce using rule 60 (statements -> statement .)
    ELSE            reduce using rule 60 (statements -> statement .)


state 5

    (62) statements -> if_statement . statement
    (57) statement -> if_statement .
    (55) statement -> . expression
    (56) statement -> . sequence
    (57) statement -> . if_statement
    (58) statement -> . while_statement
    (59) statement -> . loop_statement
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END
    (65) if_statement -> . IF expression THEN statements ENDCOND
    (66) if_statement -> . IF expression THEN statements else_elif_body ENDCOND
    (69) while_statement -> . WHILE expression THEN statements ENDCOND
    (70) loop_statement -> . LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    END             reduce using rule 57 (statement -> if_statement .)
    SEMICOLON       reduce using rule 57 (statement -> if_statement .)
    ENDCOND         reduce using rule 57 (statement -> if_statement .)
    ELIF            reduce using rule 57 (statement -> if_statement .)
    ELSE            reduce using rule 57 (statement -> if_statement .)
    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    BEGIN           shift and go to state 2
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    LOOP            shift and go to state 12
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    if_statement                   shift and go to state 26
    statement                      shift and go to state 27
    expression                     shift and go to state 8
    sequence                       shift and go to state 9
    while_statement                shift and go to state 28
    loop_statement                 shift and go to state 29
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 6

    (63) statements -> while_statement . statement
    (58) statement -> while_statement .
    (55) statement -> . expression
    (56) statement -> . sequence
    (57) statement -> . if_statement
    (58) statement -> . while_statement
    (59) statement -> . loop_statement
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END
    (65) if_statement -> . IF expression THEN statements ENDCOND
    (66) if_statement -> . IF expression THEN statements else_elif_body ENDCOND
    (69) while_statement -> . WHILE expression THEN statements ENDCOND
    (70) loop_statement -> . LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    END             reduce using rule 58 (statement -> while_statement .)
    SEMICOLON       reduce using rule 58 (statement -> while_statement .)
    ENDCOND         reduce using rule 58 (statement -> while_statement .)
    ELIF            reduce using rule 58 (statement -> while_statement .)
    ELSE            reduce using rule 58 (statement -> while_statement .)
    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    BEGIN           shift and go to state 2
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    LOOP            shift and go to state 12
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    while_statement                shift and go to state 28
    statement                      shift and go to state 30
    expression                     shift and go to state 8
    sequence                       shift and go to state 9
    if_statement                   shift and go to state 26
    loop_statement                 shift and go to state 29
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 7

    (64) statements -> loop_statement . statement
    (59) statement -> loop_statement .
    (55) statement -> . expression
    (56) statement -> . sequence
    (57) statement -> . if_statement
    (58) statement -> . while_statement
    (59) statement -> . loop_statement
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END
    (65) if_statement -> . IF expression THEN statements ENDCOND
    (66) if_statement -> . IF expression THEN statements else_elif_body ENDCOND
    (69) while_statement -> . WHILE expression THEN statements ENDCOND
    (70) loop_statement -> . LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    END             reduce using rule 59 (statement -> loop_statement .)
    SEMICOLON       reduce using rule 59 (statement -> loop_statement .)
    ENDCOND         reduce using rule 59 (statement -> loop_statement .)
    ELIF            reduce using rule 59 (statement -> loop_statement .)
    ELSE            reduce using rule 59 (statement -> loop_statement .)
    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    BEGIN           shift and go to state 2
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    LOOP            shift and go to state 12
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    loop_statement                 shift and go to state 29
    statement                      shift and go to state 31
    expression                     shift and go to state 8
    sequence                       shift and go to state 9
    if_statement                   shift and go to state 26
    while_statement                shift and go to state 28
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 8

    (55) statement -> expression .
    (84) expression -> expression . LPAREN expression RPAREN

    END             reduce using rule 55 (statement -> expression .)
    SEMICOLON       reduce using rule 55 (statement -> expression .)
    ENDCOND         reduce using rule 55 (statement -> expression .)
    ELIF            reduce using rule 55 (statement -> expression .)
    ELSE            reduce using rule 55 (statement -> expression .)
    LPAREN          shift and go to state 32


state 9

    (56) statement -> sequence .

    END             reduce using rule 56 (statement -> sequence .)
    SEMICOLON       reduce using rule 56 (statement -> sequence .)
    ENDCOND         reduce using rule 56 (statement -> sequence .)
    ELIF            reduce using rule 56 (statement -> sequence .)
    ELSE            reduce using rule 56 (statement -> sequence .)


state 10

    (65) if_statement -> IF . expression THEN statements ENDCOND
    (66) if_statement -> IF . expression THEN statements else_elif_body ENDCOND
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 33
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 11

    (69) while_statement -> WHILE . expression THEN statements ENDCOND
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 34
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 12

    (70) loop_statement -> LOOP . IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND

    IDENTIFIER      shift and go to state 35


state 13

    (34) expression -> IDENTIFIER . ASSIGN expression
    (35) expression -> IDENTIFIER . PLUSASSIGN expression
    (36) expression -> IDENTIFIER . MINUSASSIGN expression
    (37) expression -> IDENTIFIER . TIMESASSIGN expression
    (38) expression -> IDENTIFIER . POWERASSIGN expression
    (39) expression -> IDENTIFIER . DIVIDEASSIGN expression
    (40) expression -> IDENTIFIER . DIVIDE_FLOORASSIGN expression
    (41) expression -> IDENTIFIER . DIVIDE_CEILASSIGN expression
    (42) expression -> IDENTIFIER . GREATER_THANASSIGN expression
    (43) expression -> IDENTIFIER . SMALLER_THANASSIGN expression
    (44) expression -> IDENTIFIER . GREATER_EQUALSASSIGN expression
    (45) expression -> IDENTIFIER . SMALLER_EQUALSASSIGN expression
    (46) expression -> IDENTIFIER . EQUALSASSIGN expression
    (47) expression -> IDENTIFIER . UNEQUALSASSIGN expression
    (48) expression -> IDENTIFIER . ANDASSIGN expression
    (49) expression -> IDENTIFIER . ORASSIGN expression
    (50) expression -> IDENTIFIER . XORASSIGN expression
    (51) expression -> IDENTIFIER . EXPASSIGN expression
    (52) expression -> IDENTIFIER . MODASSIGN expression
    (3) atomar -> IDENTIFIER .

    ASSIGN          shift and go to state 36
    PLUSASSIGN      shift and go to state 37
    MINUSASSIGN     shift and go to state 38
    TIMESASSIGN     shift and go to state 39
    POWERASSIGN     shift and go to state 40
    DIVIDEASSIGN    shift and go to state 41
    DIVIDE_FLOORASSIGN shift and go to state 42
    DIVIDE_CEILASSIGN shift and go to state 43
    GREATER_THANASSIGN shift and go to state 44
    SMALLER_THANASSIGN shift and go to state 45
    GREATER_EQUALSASSIGN shift and go to state 46
    SMALLER_EQUALSASSIGN shift and go to state 47
    EQUALSASSIGN    shift and go to state 48
    UNEQUALSASSIGN  shift and go to state 49
    ANDASSIGN       shift and go to state 50
    ORASSIGN        shift and go to state 51
    XORASSIGN       shift and go to state 52
    EXPASSIGN       shift and go to state 53
    MODASSIGN       shift and go to state 54
    PLUS            reduce using rule 3 (atomar -> IDENTIFIER .)
    MINUS           reduce using rule 3 (atomar -> IDENTIFIER .)
    TIMES           reduce using rule 3 (atomar -> IDENTIFIER .)
    DIVIDE          reduce using rule 3 (atomar -> IDENTIFIER .)
    DIVIDE_CEIL     reduce using rule 3 (atomar -> IDENTIFIER .)
    DIVIDE_FLOOR    reduce using rule 3 (atomar -> IDENTIFIER .)
    MOD             reduce using rule 3 (atomar -> IDENTIFIER .)
    EXP             reduce using rule 3 (atomar -> IDENTIFIER .)
    AND             reduce using rule 3 (atomar -> IDENTIFIER .)
    OR              reduce using rule 3 (atomar -> IDENTIFIER .)
    XOR             reduce using rule 3 (atomar -> IDENTIFIER .)
    POWER           reduce using rule 3 (atomar -> IDENTIFIER .)
    IMAG            reduce using rule 3 (atomar -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 3 (atomar -> IDENTIFIER .)
    SMALLER_THAN    reduce using rule 3 (atomar -> IDENTIFIER .)
    UNEQUALS        reduce using rule 3 (atomar -> IDENTIFIER .)
    EQUALS          reduce using rule 3 (atomar -> IDENTIFIER .)
    SMALLER_EQUALS  reduce using rule 3 (atomar -> IDENTIFIER .)
    GREATER_EQUALS  reduce using rule 3 (atomar -> IDENTIFIER .)
    LPAREN          reduce using rule 3 (atomar -> IDENTIFIER .)
    END             reduce using rule 3 (atomar -> IDENTIFIER .)
    SEMICOLON       reduce using rule 3 (atomar -> IDENTIFIER .)
    ENDCOND         reduce using rule 3 (atomar -> IDENTIFIER .)
    ELIF            reduce using rule 3 (atomar -> IDENTIFIER .)
    ELSE            reduce using rule 3 (atomar -> IDENTIFIER .)
    THEN            reduce using rule 3 (atomar -> IDENTIFIER .)
    RPAREN          reduce using rule 3 (atomar -> IDENTIFIER .)
    COMMA           reduce using rule 3 (atomar -> IDENTIFIER .)
    COLON           reduce using rule 3 (atomar -> IDENTIFIER .)
    DOTS            reduce using rule 3 (atomar -> IDENTIFIER .)
    CLOSED_BRACKETS reduce using rule 3 (atomar -> IDENTIFIER .)
    OPEN_BRACKETS   reduce using rule 3 (atomar -> IDENTIFIER .)


state 14

    (5) expression -> arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG
    (24) comparison -> arithmetic_expression . comparison_op arithmetic_expression comparison_chain
    (25) comparison -> arithmetic_expression . comparison_op arithmetic_expression
    (28) comparison_op -> . GREATER_THAN
    (29) comparison_op -> . SMALLER_THAN
    (30) comparison_op -> . UNEQUALS
    (31) comparison_op -> . EQUALS
    (32) comparison_op -> . SMALLER_EQUALS
    (33) comparison_op -> . GREATER_EQUALS

    LPAREN          reduce using rule 5 (expression -> arithmetic_expression .)
    END             reduce using rule 5 (expression -> arithmetic_expression .)
    SEMICOLON       reduce using rule 5 (expression -> arithmetic_expression .)
    ENDCOND         reduce using rule 5 (expression -> arithmetic_expression .)
    ELIF            reduce using rule 5 (expression -> arithmetic_expression .)
    ELSE            reduce using rule 5 (expression -> arithmetic_expression .)
    THEN            reduce using rule 5 (expression -> arithmetic_expression .)
    RPAREN          reduce using rule 5 (expression -> arithmetic_expression .)
    COMMA           reduce using rule 5 (expression -> arithmetic_expression .)
    COLON           reduce using rule 5 (expression -> arithmetic_expression .)
    DOTS            reduce using rule 5 (expression -> arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 5 (expression -> arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 5 (expression -> arithmetic_expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    DIVIDE_CEIL     shift and go to state 59
    DIVIDE_FLOOR    shift and go to state 60
    MOD             shift and go to state 61
    EXP             shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    XOR             shift and go to state 65
    POWER           shift and go to state 66
    IMAG            shift and go to state 67
    GREATER_THAN    shift and go to state 69
    SMALLER_THAN    shift and go to state 70
    UNEQUALS        shift and go to state 71
    EQUALS          shift and go to state 72
    SMALLER_EQUALS  shift and go to state 73
    GREATER_EQUALS  shift and go to state 74

    comparison_op                  shift and go to state 68

state 15

    (6) expression -> comparison .

    LPAREN          reduce using rule 6 (expression -> comparison .)
    END             reduce using rule 6 (expression -> comparison .)
    SEMICOLON       reduce using rule 6 (expression -> comparison .)
    ENDCOND         reduce using rule 6 (expression -> comparison .)
    ELIF            reduce using rule 6 (expression -> comparison .)
    ELSE            reduce using rule 6 (expression -> comparison .)
    THEN            reduce using rule 6 (expression -> comparison .)
    RPAREN          reduce using rule 6 (expression -> comparison .)
    COMMA           reduce using rule 6 (expression -> comparison .)
    COLON           reduce using rule 6 (expression -> comparison .)
    DOTS            reduce using rule 6 (expression -> comparison .)
    CLOSED_BRACKETS reduce using rule 6 (expression -> comparison .)
    OPEN_BRACKETS   reduce using rule 6 (expression -> comparison .)


state 16

    (75) expression -> LAMBDA . LPAREN parameter RPAREN LAMBDA_ARROW expression

    LPAREN          shift and go to state 75


state 17

    (4) arithmetic_expression -> LPAREN . expression RPAREN
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 76
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 18

    (21) arithmetic_expression -> PLUS . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 77
    atomar                         shift and go to state 21

state 19

    (20) arithmetic_expression -> MINUS . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 79
    atomar                         shift and go to state 21

state 20

    (19) arithmetic_expression -> NOT . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 80
    atomar                         shift and go to state 21

state 21

    (23) arithmetic_expression -> atomar .

    PLUS            reduce using rule 23 (arithmetic_expression -> atomar .)
    MINUS           reduce using rule 23 (arithmetic_expression -> atomar .)
    TIMES           reduce using rule 23 (arithmetic_expression -> atomar .)
    DIVIDE          reduce using rule 23 (arithmetic_expression -> atomar .)
    DIVIDE_CEIL     reduce using rule 23 (arithmetic_expression -> atomar .)
    DIVIDE_FLOOR    reduce using rule 23 (arithmetic_expression -> atomar .)
    MOD             reduce using rule 23 (arithmetic_expression -> atomar .)
    EXP             reduce using rule 23 (arithmetic_expression -> atomar .)
    AND             reduce using rule 23 (arithmetic_expression -> atomar .)
    OR              reduce using rule 23 (arithmetic_expression -> atomar .)
    XOR             reduce using rule 23 (arithmetic_expression -> atomar .)
    POWER           reduce using rule 23 (arithmetic_expression -> atomar .)
    IMAG            reduce using rule 23 (arithmetic_expression -> atomar .)
    GREATER_THAN    reduce using rule 23 (arithmetic_expression -> atomar .)
    SMALLER_THAN    reduce using rule 23 (arithmetic_expression -> atomar .)
    UNEQUALS        reduce using rule 23 (arithmetic_expression -> atomar .)
    EQUALS          reduce using rule 23 (arithmetic_expression -> atomar .)
    SMALLER_EQUALS  reduce using rule 23 (arithmetic_expression -> atomar .)
    GREATER_EQUALS  reduce using rule 23 (arithmetic_expression -> atomar .)
    LPAREN          reduce using rule 23 (arithmetic_expression -> atomar .)
    END             reduce using rule 23 (arithmetic_expression -> atomar .)
    SEMICOLON       reduce using rule 23 (arithmetic_expression -> atomar .)
    ENDCOND         reduce using rule 23 (arithmetic_expression -> atomar .)
    ELIF            reduce using rule 23 (arithmetic_expression -> atomar .)
    ELSE            reduce using rule 23 (arithmetic_expression -> atomar .)
    THEN            reduce using rule 23 (arithmetic_expression -> atomar .)
    RPAREN          reduce using rule 23 (arithmetic_expression -> atomar .)
    COMMA           reduce using rule 23 (arithmetic_expression -> atomar .)
    COLON           reduce using rule 23 (arithmetic_expression -> atomar .)
    DOTS            reduce using rule 23 (arithmetic_expression -> atomar .)
    CLOSED_BRACKETS reduce using rule 23 (arithmetic_expression -> atomar .)
    OPEN_BRACKETS   reduce using rule 23 (arithmetic_expression -> atomar .)


state 22

    (1) atomar -> NUMBER .

    PLUS            reduce using rule 1 (atomar -> NUMBER .)
    MINUS           reduce using rule 1 (atomar -> NUMBER .)
    TIMES           reduce using rule 1 (atomar -> NUMBER .)
    DIVIDE          reduce using rule 1 (atomar -> NUMBER .)
    DIVIDE_CEIL     reduce using rule 1 (atomar -> NUMBER .)
    DIVIDE_FLOOR    reduce using rule 1 (atomar -> NUMBER .)
    MOD             reduce using rule 1 (atomar -> NUMBER .)
    EXP             reduce using rule 1 (atomar -> NUMBER .)
    AND             reduce using rule 1 (atomar -> NUMBER .)
    OR              reduce using rule 1 (atomar -> NUMBER .)
    XOR             reduce using rule 1 (atomar -> NUMBER .)
    POWER           reduce using rule 1 (atomar -> NUMBER .)
    IMAG            reduce using rule 1 (atomar -> NUMBER .)
    GREATER_THAN    reduce using rule 1 (atomar -> NUMBER .)
    SMALLER_THAN    reduce using rule 1 (atomar -> NUMBER .)
    UNEQUALS        reduce using rule 1 (atomar -> NUMBER .)
    EQUALS          reduce using rule 1 (atomar -> NUMBER .)
    SMALLER_EQUALS  reduce using rule 1 (atomar -> NUMBER .)
    GREATER_EQUALS  reduce using rule 1 (atomar -> NUMBER .)
    LPAREN          reduce using rule 1 (atomar -> NUMBER .)
    END             reduce using rule 1 (atomar -> NUMBER .)
    SEMICOLON       reduce using rule 1 (atomar -> NUMBER .)
    ENDCOND         reduce using rule 1 (atomar -> NUMBER .)
    ELIF            reduce using rule 1 (atomar -> NUMBER .)
    ELSE            reduce using rule 1 (atomar -> NUMBER .)
    THEN            reduce using rule 1 (atomar -> NUMBER .)
    RPAREN          reduce using rule 1 (atomar -> NUMBER .)
    COMMA           reduce using rule 1 (atomar -> NUMBER .)
    COLON           reduce using rule 1 (atomar -> NUMBER .)
    DOTS            reduce using rule 1 (atomar -> NUMBER .)
    CLOSED_BRACKETS reduce using rule 1 (atomar -> NUMBER .)
    OPEN_BRACKETS   reduce using rule 1 (atomar -> NUMBER .)


state 23

    (2) atomar -> FLOAT .

    PLUS            reduce using rule 2 (atomar -> FLOAT .)
    MINUS           reduce using rule 2 (atomar -> FLOAT .)
    TIMES           reduce using rule 2 (atomar -> FLOAT .)
    DIVIDE          reduce using rule 2 (atomar -> FLOAT .)
    DIVIDE_CEIL     reduce using rule 2 (atomar -> FLOAT .)
    DIVIDE_FLOOR    reduce using rule 2 (atomar -> FLOAT .)
    MOD             reduce using rule 2 (atomar -> FLOAT .)
    EXP             reduce using rule 2 (atomar -> FLOAT .)
    AND             reduce using rule 2 (atomar -> FLOAT .)
    OR              reduce using rule 2 (atomar -> FLOAT .)
    XOR             reduce using rule 2 (atomar -> FLOAT .)
    POWER           reduce using rule 2 (atomar -> FLOAT .)
    IMAG            reduce using rule 2 (atomar -> FLOAT .)
    GREATER_THAN    reduce using rule 2 (atomar -> FLOAT .)
    SMALLER_THAN    reduce using rule 2 (atomar -> FLOAT .)
    UNEQUALS        reduce using rule 2 (atomar -> FLOAT .)
    EQUALS          reduce using rule 2 (atomar -> FLOAT .)
    SMALLER_EQUALS  reduce using rule 2 (atomar -> FLOAT .)
    GREATER_EQUALS  reduce using rule 2 (atomar -> FLOAT .)
    LPAREN          reduce using rule 2 (atomar -> FLOAT .)
    END             reduce using rule 2 (atomar -> FLOAT .)
    SEMICOLON       reduce using rule 2 (atomar -> FLOAT .)
    ENDCOND         reduce using rule 2 (atomar -> FLOAT .)
    ELIF            reduce using rule 2 (atomar -> FLOAT .)
    ELSE            reduce using rule 2 (atomar -> FLOAT .)
    THEN            reduce using rule 2 (atomar -> FLOAT .)
    RPAREN          reduce using rule 2 (atomar -> FLOAT .)
    COMMA           reduce using rule 2 (atomar -> FLOAT .)
    COLON           reduce using rule 2 (atomar -> FLOAT .)
    DOTS            reduce using rule 2 (atomar -> FLOAT .)
    CLOSED_BRACKETS reduce using rule 2 (atomar -> FLOAT .)
    OPEN_BRACKETS   reduce using rule 2 (atomar -> FLOAT .)


state 24

    (53) sequence -> BEGIN statements END .

    $end            reduce using rule 53 (sequence -> BEGIN statements END .)
    END             reduce using rule 53 (sequence -> BEGIN statements END .)
    SEMICOLON       reduce using rule 53 (sequence -> BEGIN statements END .)
    ENDCOND         reduce using rule 53 (sequence -> BEGIN statements END .)
    ELIF            reduce using rule 53 (sequence -> BEGIN statements END .)
    ELSE            reduce using rule 53 (sequence -> BEGIN statements END .)


state 25

    (54) sequence -> BEGIN statements SEMICOLON . END
    (61) statements -> statements SEMICOLON . statement
    (55) statement -> . expression
    (56) statement -> . sequence
    (57) statement -> . if_statement
    (58) statement -> . while_statement
    (59) statement -> . loop_statement
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END
    (65) if_statement -> . IF expression THEN statements ENDCOND
    (66) if_statement -> . IF expression THEN statements else_elif_body ENDCOND
    (69) while_statement -> . WHILE expression THEN statements ENDCOND
    (70) loop_statement -> . LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    END             shift and go to state 81
    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    BEGIN           shift and go to state 2
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    LOOP            shift and go to state 12
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    statement                      shift and go to state 82
    expression                     shift and go to state 8
    sequence                       shift and go to state 9
    if_statement                   shift and go to state 26
    while_statement                shift and go to state 28
    loop_statement                 shift and go to state 29
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 26

    (57) statement -> if_statement .

    END             reduce using rule 57 (statement -> if_statement .)
    SEMICOLON       reduce using rule 57 (statement -> if_statement .)
    ENDCOND         reduce using rule 57 (statement -> if_statement .)
    ELIF            reduce using rule 57 (statement -> if_statement .)
    ELSE            reduce using rule 57 (statement -> if_statement .)


state 27

    (62) statements -> if_statement statement .

    END             reduce using rule 62 (statements -> if_statement statement .)
    SEMICOLON       reduce using rule 62 (statements -> if_statement statement .)
    ENDCOND         reduce using rule 62 (statements -> if_statement statement .)
    ELIF            reduce using rule 62 (statements -> if_statement statement .)
    ELSE            reduce using rule 62 (statements -> if_statement statement .)


state 28

    (58) statement -> while_statement .

    END             reduce using rule 58 (statement -> while_statement .)
    SEMICOLON       reduce using rule 58 (statement -> while_statement .)
    ENDCOND         reduce using rule 58 (statement -> while_statement .)
    ELIF            reduce using rule 58 (statement -> while_statement .)
    ELSE            reduce using rule 58 (statement -> while_statement .)


state 29

    (59) statement -> loop_statement .

    END             reduce using rule 59 (statement -> loop_statement .)
    SEMICOLON       reduce using rule 59 (statement -> loop_statement .)
    ENDCOND         reduce using rule 59 (statement -> loop_statement .)
    ELIF            reduce using rule 59 (statement -> loop_statement .)
    ELSE            reduce using rule 59 (statement -> loop_statement .)


state 30

    (63) statements -> while_statement statement .

    END             reduce using rule 63 (statements -> while_statement statement .)
    SEMICOLON       reduce using rule 63 (statements -> while_statement statement .)
    ENDCOND         reduce using rule 63 (statements -> while_statement statement .)
    ELIF            reduce using rule 63 (statements -> while_statement statement .)
    ELSE            reduce using rule 63 (statements -> while_statement statement .)


state 31

    (64) statements -> loop_statement statement .

    END             reduce using rule 64 (statements -> loop_statement statement .)
    SEMICOLON       reduce using rule 64 (statements -> loop_statement statement .)
    ENDCOND         reduce using rule 64 (statements -> loop_statement statement .)
    ELIF            reduce using rule 64 (statements -> loop_statement statement .)
    ELSE            reduce using rule 64 (statements -> loop_statement statement .)


state 32

    (84) expression -> expression LPAREN . expression RPAREN
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 83
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 33

    (65) if_statement -> IF expression . THEN statements ENDCOND
    (66) if_statement -> IF expression . THEN statements else_elif_body ENDCOND
    (84) expression -> expression . LPAREN expression RPAREN

    THEN            shift and go to state 84
    LPAREN          shift and go to state 32


state 34

    (69) while_statement -> WHILE expression . THEN statements ENDCOND
    (84) expression -> expression . LPAREN expression RPAREN

    THEN            shift and go to state 85
    LPAREN          shift and go to state 32


state 35

    (70) loop_statement -> LOOP IDENTIFIER . LOOPIN interval LOOPTHEN statements ENDCOND

    LOOPIN          shift and go to state 86


state 36

    (34) expression -> IDENTIFIER ASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 87
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 37

    (35) expression -> IDENTIFIER PLUSASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 88
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 38

    (36) expression -> IDENTIFIER MINUSASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 89
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 39

    (37) expression -> IDENTIFIER TIMESASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 90
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 40

    (38) expression -> IDENTIFIER POWERASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 91
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 41

    (39) expression -> IDENTIFIER DIVIDEASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 92
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 42

    (40) expression -> IDENTIFIER DIVIDE_FLOORASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 93
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 43

    (41) expression -> IDENTIFIER DIVIDE_CEILASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 94
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 44

    (42) expression -> IDENTIFIER GREATER_THANASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 95
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 45

    (43) expression -> IDENTIFIER SMALLER_THANASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 96
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 46

    (44) expression -> IDENTIFIER GREATER_EQUALSASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 97
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 47

    (45) expression -> IDENTIFIER SMALLER_EQUALSASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 98
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 48

    (46) expression -> IDENTIFIER EQUALSASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 99
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 49

    (47) expression -> IDENTIFIER UNEQUALSASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 100
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 50

    (48) expression -> IDENTIFIER ANDASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 101
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 51

    (49) expression -> IDENTIFIER ORASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 102
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 52

    (50) expression -> IDENTIFIER XORASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 103
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 53

    (51) expression -> IDENTIFIER EXPASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 104
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 54

    (52) expression -> IDENTIFIER MODASSIGN . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 105
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 55

    (7) arithmetic_expression -> arithmetic_expression PLUS . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 106
    atomar                         shift and go to state 21

state 56

    (8) arithmetic_expression -> arithmetic_expression MINUS . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 107
    atomar                         shift and go to state 21

state 57

    (9) arithmetic_expression -> arithmetic_expression TIMES . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 108
    atomar                         shift and go to state 21

state 58

    (10) arithmetic_expression -> arithmetic_expression DIVIDE . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 109
    atomar                         shift and go to state 21

state 59

    (11) arithmetic_expression -> arithmetic_expression DIVIDE_CEIL . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 110
    atomar                         shift and go to state 21

state 60

    (12) arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 111
    atomar                         shift and go to state 21

state 61

    (13) arithmetic_expression -> arithmetic_expression MOD . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 112
    atomar                         shift and go to state 21

state 62

    (14) arithmetic_expression -> arithmetic_expression EXP . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 113
    atomar                         shift and go to state 21

state 63

    (15) arithmetic_expression -> arithmetic_expression AND . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 114
    atomar                         shift and go to state 21

state 64

    (16) arithmetic_expression -> arithmetic_expression OR . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 115
    atomar                         shift and go to state 21

state 65

    (17) arithmetic_expression -> arithmetic_expression XOR . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 116
    atomar                         shift and go to state 21

state 66

    (18) arithmetic_expression -> arithmetic_expression POWER . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 117
    atomar                         shift and go to state 21

state 67

    (22) arithmetic_expression -> arithmetic_expression IMAG .

    PLUS            reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    MINUS           reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    TIMES           reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    DIVIDE          reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    DIVIDE_CEIL     reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    DIVIDE_FLOOR    reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    MOD             reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    EXP             reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    AND             reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    OR              reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    XOR             reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    POWER           reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    IMAG            reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    GREATER_THAN    reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    SMALLER_THAN    reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    UNEQUALS        reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    EQUALS          reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    SMALLER_EQUALS  reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    GREATER_EQUALS  reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    LPAREN          reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    END             reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    SEMICOLON       reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    ENDCOND         reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    ELIF            reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    ELSE            reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    THEN            reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    RPAREN          reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    COMMA           reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    COLON           reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    DOTS            reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    CLOSED_BRACKETS reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)
    OPEN_BRACKETS   reduce using rule 22 (arithmetic_expression -> arithmetic_expression IMAG .)


state 68

    (24) comparison -> arithmetic_expression comparison_op . arithmetic_expression comparison_chain
    (25) comparison -> arithmetic_expression comparison_op . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 118
    atomar                         shift and go to state 21

state 69

    (28) comparison_op -> GREATER_THAN .

    LPAREN          reduce using rule 28 (comparison_op -> GREATER_THAN .)
    NOT             reduce using rule 28 (comparison_op -> GREATER_THAN .)
    MINUS           reduce using rule 28 (comparison_op -> GREATER_THAN .)
    PLUS            reduce using rule 28 (comparison_op -> GREATER_THAN .)
    NUMBER          reduce using rule 28 (comparison_op -> GREATER_THAN .)
    FLOAT           reduce using rule 28 (comparison_op -> GREATER_THAN .)
    IDENTIFIER      reduce using rule 28 (comparison_op -> GREATER_THAN .)


state 70

    (29) comparison_op -> SMALLER_THAN .

    LPAREN          reduce using rule 29 (comparison_op -> SMALLER_THAN .)
    NOT             reduce using rule 29 (comparison_op -> SMALLER_THAN .)
    MINUS           reduce using rule 29 (comparison_op -> SMALLER_THAN .)
    PLUS            reduce using rule 29 (comparison_op -> SMALLER_THAN .)
    NUMBER          reduce using rule 29 (comparison_op -> SMALLER_THAN .)
    FLOAT           reduce using rule 29 (comparison_op -> SMALLER_THAN .)
    IDENTIFIER      reduce using rule 29 (comparison_op -> SMALLER_THAN .)


state 71

    (30) comparison_op -> UNEQUALS .

    LPAREN          reduce using rule 30 (comparison_op -> UNEQUALS .)
    NOT             reduce using rule 30 (comparison_op -> UNEQUALS .)
    MINUS           reduce using rule 30 (comparison_op -> UNEQUALS .)
    PLUS            reduce using rule 30 (comparison_op -> UNEQUALS .)
    NUMBER          reduce using rule 30 (comparison_op -> UNEQUALS .)
    FLOAT           reduce using rule 30 (comparison_op -> UNEQUALS .)
    IDENTIFIER      reduce using rule 30 (comparison_op -> UNEQUALS .)


state 72

    (31) comparison_op -> EQUALS .

    LPAREN          reduce using rule 31 (comparison_op -> EQUALS .)
    NOT             reduce using rule 31 (comparison_op -> EQUALS .)
    MINUS           reduce using rule 31 (comparison_op -> EQUALS .)
    PLUS            reduce using rule 31 (comparison_op -> EQUALS .)
    NUMBER          reduce using rule 31 (comparison_op -> EQUALS .)
    FLOAT           reduce using rule 31 (comparison_op -> EQUALS .)
    IDENTIFIER      reduce using rule 31 (comparison_op -> EQUALS .)


state 73

    (32) comparison_op -> SMALLER_EQUALS .

    LPAREN          reduce using rule 32 (comparison_op -> SMALLER_EQUALS .)
    NOT             reduce using rule 32 (comparison_op -> SMALLER_EQUALS .)
    MINUS           reduce using rule 32 (comparison_op -> SMALLER_EQUALS .)
    PLUS            reduce using rule 32 (comparison_op -> SMALLER_EQUALS .)
    NUMBER          reduce using rule 32 (comparison_op -> SMALLER_EQUALS .)
    FLOAT           reduce using rule 32 (comparison_op -> SMALLER_EQUALS .)
    IDENTIFIER      reduce using rule 32 (comparison_op -> SMALLER_EQUALS .)


state 74

    (33) comparison_op -> GREATER_EQUALS .

    LPAREN          reduce using rule 33 (comparison_op -> GREATER_EQUALS .)
    NOT             reduce using rule 33 (comparison_op -> GREATER_EQUALS .)
    MINUS           reduce using rule 33 (comparison_op -> GREATER_EQUALS .)
    PLUS            reduce using rule 33 (comparison_op -> GREATER_EQUALS .)
    NUMBER          reduce using rule 33 (comparison_op -> GREATER_EQUALS .)
    FLOAT           reduce using rule 33 (comparison_op -> GREATER_EQUALS .)
    IDENTIFIER      reduce using rule 33 (comparison_op -> GREATER_EQUALS .)


state 75

    (75) expression -> LAMBDA LPAREN . parameter RPAREN LAMBDA_ARROW expression
    (76) parameter -> . expression COMMA parameter
    (77) parameter -> . expression
    (78) parameter -> . parameter_keywords
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (79) parameter_keywords -> . expression COLON expression COMMA parameter_keywords
    (80) parameter_keywords -> . expression COLON expression
    (81) parameter_keywords -> . parameter_infty
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (82) parameter_infty -> . expression DOTS
    (83) parameter_infty -> .
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    RPAREN          reduce using rule 83 (parameter_infty -> .)
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    parameter                      shift and go to state 119
    expression                     shift and go to state 120
    parameter_keywords             shift and go to state 121
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    parameter_infty                shift and go to state 122
    atomar                         shift and go to state 21

state 76

    (4) arithmetic_expression -> LPAREN expression . RPAREN
    (84) expression -> expression . LPAREN expression RPAREN

    RPAREN          shift and go to state 123
    LPAREN          shift and go to state 32


state 77

    (21) arithmetic_expression -> PLUS arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    MINUS           reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    TIMES           reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    DIVIDE          reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    DIVIDE_CEIL     reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    DIVIDE_FLOOR    reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    MOD             reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    EXP             reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    AND             reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    OR              reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    XOR             reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    POWER           reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    IMAG            reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    GREATER_THAN    reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    SMALLER_THAN    reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    UNEQUALS        reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    EQUALS          reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    LPAREN          reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    END             reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    SEMICOLON       reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    ENDCOND         reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    ELIF            reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    ELSE            reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    THEN            reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    RPAREN          reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    COMMA           reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    COLON           reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    DOTS            reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 21 (arithmetic_expression -> PLUS arithmetic_expression .)

  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DIVIDE_CEIL     [ shift and go to state 59 ]
  ! DIVIDE_FLOOR    [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! EXP             [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]
  ! POWER           [ shift and go to state 66 ]
  ! IMAG            [ shift and go to state 67 ]


state 78

    (3) atomar -> IDENTIFIER .

    PLUS            reduce using rule 3 (atomar -> IDENTIFIER .)
    MINUS           reduce using rule 3 (atomar -> IDENTIFIER .)
    TIMES           reduce using rule 3 (atomar -> IDENTIFIER .)
    DIVIDE          reduce using rule 3 (atomar -> IDENTIFIER .)
    DIVIDE_CEIL     reduce using rule 3 (atomar -> IDENTIFIER .)
    DIVIDE_FLOOR    reduce using rule 3 (atomar -> IDENTIFIER .)
    MOD             reduce using rule 3 (atomar -> IDENTIFIER .)
    EXP             reduce using rule 3 (atomar -> IDENTIFIER .)
    AND             reduce using rule 3 (atomar -> IDENTIFIER .)
    OR              reduce using rule 3 (atomar -> IDENTIFIER .)
    XOR             reduce using rule 3 (atomar -> IDENTIFIER .)
    POWER           reduce using rule 3 (atomar -> IDENTIFIER .)
    IMAG            reduce using rule 3 (atomar -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 3 (atomar -> IDENTIFIER .)
    SMALLER_THAN    reduce using rule 3 (atomar -> IDENTIFIER .)
    UNEQUALS        reduce using rule 3 (atomar -> IDENTIFIER .)
    EQUALS          reduce using rule 3 (atomar -> IDENTIFIER .)
    SMALLER_EQUALS  reduce using rule 3 (atomar -> IDENTIFIER .)
    GREATER_EQUALS  reduce using rule 3 (atomar -> IDENTIFIER .)
    LPAREN          reduce using rule 3 (atomar -> IDENTIFIER .)
    END             reduce using rule 3 (atomar -> IDENTIFIER .)
    SEMICOLON       reduce using rule 3 (atomar -> IDENTIFIER .)
    ENDCOND         reduce using rule 3 (atomar -> IDENTIFIER .)
    ELIF            reduce using rule 3 (atomar -> IDENTIFIER .)
    ELSE            reduce using rule 3 (atomar -> IDENTIFIER .)
    THEN            reduce using rule 3 (atomar -> IDENTIFIER .)
    RPAREN          reduce using rule 3 (atomar -> IDENTIFIER .)
    COMMA           reduce using rule 3 (atomar -> IDENTIFIER .)
    COLON           reduce using rule 3 (atomar -> IDENTIFIER .)
    DOTS            reduce using rule 3 (atomar -> IDENTIFIER .)
    CLOSED_BRACKETS reduce using rule 3 (atomar -> IDENTIFIER .)
    OPEN_BRACKETS   reduce using rule 3 (atomar -> IDENTIFIER .)


state 79

    (20) arithmetic_expression -> MINUS arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    MINUS           reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    TIMES           reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    DIVIDE          reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    DIVIDE_CEIL     reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    DIVIDE_FLOOR    reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    MOD             reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    EXP             reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    AND             reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    OR              reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    XOR             reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    POWER           reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    IMAG            reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    GREATER_THAN    reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    SMALLER_THAN    reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    UNEQUALS        reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    EQUALS          reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    LPAREN          reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    END             reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    SEMICOLON       reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    ENDCOND         reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    ELIF            reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    ELSE            reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    THEN            reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    RPAREN          reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    COMMA           reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    COLON           reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    DOTS            reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 20 (arithmetic_expression -> MINUS arithmetic_expression .)

  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DIVIDE_CEIL     [ shift and go to state 59 ]
  ! DIVIDE_FLOOR    [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! EXP             [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]
  ! POWER           [ shift and go to state 66 ]
  ! IMAG            [ shift and go to state 67 ]


state 80

    (19) arithmetic_expression -> NOT arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    MINUS           reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    TIMES           reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    DIVIDE          reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    DIVIDE_CEIL     reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    DIVIDE_FLOOR    reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    MOD             reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    EXP             reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    AND             reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    OR              reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    XOR             reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    POWER           reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    IMAG            reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    GREATER_THAN    reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    SMALLER_THAN    reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    UNEQUALS        reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    EQUALS          reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    LPAREN          reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    END             reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    SEMICOLON       reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    ENDCOND         reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    ELIF            reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    ELSE            reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    THEN            reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    RPAREN          reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    COMMA           reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    COLON           reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    DOTS            reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 19 (arithmetic_expression -> NOT arithmetic_expression .)

  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DIVIDE_CEIL     [ shift and go to state 59 ]
  ! DIVIDE_FLOOR    [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! EXP             [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]
  ! POWER           [ shift and go to state 66 ]
  ! IMAG            [ shift and go to state 67 ]


state 81

    (54) sequence -> BEGIN statements SEMICOLON END .

    $end            reduce using rule 54 (sequence -> BEGIN statements SEMICOLON END .)
    END             reduce using rule 54 (sequence -> BEGIN statements SEMICOLON END .)
    SEMICOLON       reduce using rule 54 (sequence -> BEGIN statements SEMICOLON END .)
    ENDCOND         reduce using rule 54 (sequence -> BEGIN statements SEMICOLON END .)
    ELIF            reduce using rule 54 (sequence -> BEGIN statements SEMICOLON END .)
    ELSE            reduce using rule 54 (sequence -> BEGIN statements SEMICOLON END .)


state 82

    (61) statements -> statements SEMICOLON statement .

    END             reduce using rule 61 (statements -> statements SEMICOLON statement .)
    SEMICOLON       reduce using rule 61 (statements -> statements SEMICOLON statement .)
    ENDCOND         reduce using rule 61 (statements -> statements SEMICOLON statement .)
    ELIF            reduce using rule 61 (statements -> statements SEMICOLON statement .)
    ELSE            reduce using rule 61 (statements -> statements SEMICOLON statement .)


state 83

    (84) expression -> expression LPAREN expression . RPAREN
    (84) expression -> expression . LPAREN expression RPAREN

    RPAREN          shift and go to state 124
    LPAREN          shift and go to state 32


state 84

    (65) if_statement -> IF expression THEN . statements ENDCOND
    (66) if_statement -> IF expression THEN . statements else_elif_body ENDCOND
    (60) statements -> . statement
    (61) statements -> . statements SEMICOLON statement
    (62) statements -> . if_statement statement
    (63) statements -> . while_statement statement
    (64) statements -> . loop_statement statement
    (55) statement -> . expression
    (56) statement -> . sequence
    (57) statement -> . if_statement
    (58) statement -> . while_statement
    (59) statement -> . loop_statement
    (65) if_statement -> . IF expression THEN statements ENDCOND
    (66) if_statement -> . IF expression THEN statements else_elif_body ENDCOND
    (69) while_statement -> . WHILE expression THEN statements ENDCOND
    (70) loop_statement -> . LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IF              shift and go to state 10
    WHILE           shift and go to state 11
    LOOP            shift and go to state 12
    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    BEGIN           shift and go to state 2
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 8
    statements                     shift and go to state 125
    statement                      shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    loop_statement                 shift and go to state 7
    sequence                       shift and go to state 9
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 85

    (69) while_statement -> WHILE expression THEN . statements ENDCOND
    (60) statements -> . statement
    (61) statements -> . statements SEMICOLON statement
    (62) statements -> . if_statement statement
    (63) statements -> . while_statement statement
    (64) statements -> . loop_statement statement
    (55) statement -> . expression
    (56) statement -> . sequence
    (57) statement -> . if_statement
    (58) statement -> . while_statement
    (59) statement -> . loop_statement
    (65) if_statement -> . IF expression THEN statements ENDCOND
    (66) if_statement -> . IF expression THEN statements else_elif_body ENDCOND
    (69) while_statement -> . WHILE expression THEN statements ENDCOND
    (70) loop_statement -> . LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IF              shift and go to state 10
    WHILE           shift and go to state 11
    LOOP            shift and go to state 12
    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    BEGIN           shift and go to state 2
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 8
    statements                     shift and go to state 126
    statement                      shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    loop_statement                 shift and go to state 7
    sequence                       shift and go to state 9
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 86

    (70) loop_statement -> LOOP IDENTIFIER LOOPIN . interval LOOPTHEN statements ENDCOND
    (71) interval -> . OPEN_BRACKETS expression COMMA expression CLOSED_BRACKETS
    (72) interval -> . CLOSED_BRACKETS expression COMMA expression CLOSED_BRACKETS
    (73) interval -> . OPEN_BRACKETS expression COMMA expression OPEN_BRACKETS
    (74) interval -> . CLOSED_BRACKETS expression COMMA expression OPEN_BRACKETS

    OPEN_BRACKETS   shift and go to state 128
    CLOSED_BRACKETS shift and go to state 129

    interval                       shift and go to state 127

state 87

    (34) expression -> IDENTIFIER ASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    END             reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    SEMICOLON       reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    ENDCOND         reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    ELIF            reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    ELSE            reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    THEN            reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    RPAREN          reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    COMMA           reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    COLON           reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    DOTS            reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 34 (expression -> IDENTIFIER ASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 88

    (35) expression -> IDENTIFIER PLUSASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    END             reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    SEMICOLON       reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    ENDCOND         reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    ELIF            reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    ELSE            reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    THEN            reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    RPAREN          reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    COMMA           reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    COLON           reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    DOTS            reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 35 (expression -> IDENTIFIER PLUSASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 89

    (36) expression -> IDENTIFIER MINUSASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    END             reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    SEMICOLON       reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    ENDCOND         reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    ELIF            reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    ELSE            reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    THEN            reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    RPAREN          reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    COMMA           reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    COLON           reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    DOTS            reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 36 (expression -> IDENTIFIER MINUSASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 90

    (37) expression -> IDENTIFIER TIMESASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    END             reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    SEMICOLON       reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    ENDCOND         reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    ELIF            reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    ELSE            reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    THEN            reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    RPAREN          reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    COMMA           reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    COLON           reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    DOTS            reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 37 (expression -> IDENTIFIER TIMESASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 91

    (38) expression -> IDENTIFIER POWERASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    END             reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    SEMICOLON       reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    ENDCOND         reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    ELIF            reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    ELSE            reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    THEN            reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    RPAREN          reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    COMMA           reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    COLON           reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    DOTS            reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 38 (expression -> IDENTIFIER POWERASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 92

    (39) expression -> IDENTIFIER DIVIDEASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    END             reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    SEMICOLON       reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    ENDCOND         reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    ELIF            reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    ELSE            reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    THEN            reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    RPAREN          reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    COMMA           reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    COLON           reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    DOTS            reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 39 (expression -> IDENTIFIER DIVIDEASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 93

    (40) expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    END             reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    SEMICOLON       reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    ENDCOND         reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    ELIF            reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    ELSE            reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    THEN            reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    RPAREN          reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    COMMA           reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    COLON           reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    DOTS            reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 40 (expression -> IDENTIFIER DIVIDE_FLOORASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 94

    (41) expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    END             reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    SEMICOLON       reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    ENDCOND         reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    ELIF            reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    ELSE            reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    THEN            reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    RPAREN          reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    COMMA           reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    COLON           reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    DOTS            reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 41 (expression -> IDENTIFIER DIVIDE_CEILASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 95

    (42) expression -> IDENTIFIER GREATER_THANASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    END             reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    SEMICOLON       reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    ENDCOND         reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    ELIF            reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    ELSE            reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    THEN            reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    RPAREN          reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    COMMA           reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    COLON           reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    DOTS            reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 42 (expression -> IDENTIFIER GREATER_THANASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 96

    (43) expression -> IDENTIFIER SMALLER_THANASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    END             reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    SEMICOLON       reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    ENDCOND         reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    ELIF            reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    ELSE            reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    THEN            reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    RPAREN          reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    COMMA           reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    COLON           reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    DOTS            reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 43 (expression -> IDENTIFIER SMALLER_THANASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 97

    (44) expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    END             reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    SEMICOLON       reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    ENDCOND         reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    ELIF            reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    ELSE            reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    THEN            reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    RPAREN          reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    COMMA           reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    COLON           reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    DOTS            reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 44 (expression -> IDENTIFIER GREATER_EQUALSASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 98

    (45) expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    END             reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    SEMICOLON       reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    ENDCOND         reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    ELIF            reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    ELSE            reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    THEN            reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    RPAREN          reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    COMMA           reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    COLON           reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    DOTS            reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 45 (expression -> IDENTIFIER SMALLER_EQUALSASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 99

    (46) expression -> IDENTIFIER EQUALSASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    END             reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    SEMICOLON       reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    ENDCOND         reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    ELIF            reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    ELSE            reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    THEN            reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    RPAREN          reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    COMMA           reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    COLON           reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    DOTS            reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 46 (expression -> IDENTIFIER EQUALSASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 100

    (47) expression -> IDENTIFIER UNEQUALSASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    END             reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    SEMICOLON       reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    ENDCOND         reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    ELIF            reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    ELSE            reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    THEN            reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    RPAREN          reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    COMMA           reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    COLON           reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    DOTS            reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 47 (expression -> IDENTIFIER UNEQUALSASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 101

    (48) expression -> IDENTIFIER ANDASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    END             reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    SEMICOLON       reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    ENDCOND         reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    ELIF            reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    ELSE            reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    THEN            reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    RPAREN          reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    COMMA           reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    COLON           reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    DOTS            reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 48 (expression -> IDENTIFIER ANDASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 102

    (49) expression -> IDENTIFIER ORASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    END             reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    SEMICOLON       reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    ENDCOND         reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    ELIF            reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    ELSE            reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    THEN            reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    RPAREN          reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    COMMA           reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    COLON           reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    DOTS            reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 49 (expression -> IDENTIFIER ORASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 103

    (50) expression -> IDENTIFIER XORASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    END             reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    SEMICOLON       reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    ENDCOND         reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    ELIF            reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    ELSE            reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    THEN            reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    RPAREN          reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    COMMA           reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    COLON           reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    DOTS            reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 50 (expression -> IDENTIFIER XORASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 104

    (51) expression -> IDENTIFIER EXPASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    END             reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    SEMICOLON       reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    ENDCOND         reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    ELIF            reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    ELSE            reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    THEN            reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    RPAREN          reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    COMMA           reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    COLON           reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    DOTS            reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 51 (expression -> IDENTIFIER EXPASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 105

    (52) expression -> IDENTIFIER MODASSIGN expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    END             reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    SEMICOLON       reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    ENDCOND         reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    ELIF            reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    ELSE            reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    THEN            reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    RPAREN          reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    COMMA           reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    COLON           reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    DOTS            reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    CLOSED_BRACKETS reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)
    OPEN_BRACKETS   reduce using rule 52 (expression -> IDENTIFIER MODASSIGN expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 106

    (7) arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    MINUS           reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    AND             reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    OR              reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    XOR             reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    GREATER_THAN    reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    SMALLER_THAN    reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    UNEQUALS        reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    EQUALS          reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    LPAREN          reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    END             reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    SEMICOLON       reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    ENDCOND         reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    ELIF            reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    ELSE            reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    THEN            reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    RPAREN          reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    COMMA           reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    COLON           reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    DOTS            reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    DIVIDE_CEIL     shift and go to state 59
    DIVIDE_FLOOR    shift and go to state 60
    MOD             shift and go to state 61
    EXP             shift and go to state 62
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! TIMES           [ reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! DIVIDE_CEIL     [ reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! DIVIDE_FLOOR    [ reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! MOD             [ reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! EXP             [ reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! POWER           [ reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 7 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]


state 107

    (8) arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    MINUS           reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    AND             reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    OR              reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    XOR             reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    GREATER_THAN    reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    SMALLER_THAN    reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    UNEQUALS        reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    EQUALS          reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    LPAREN          reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    END             reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    SEMICOLON       reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    ENDCOND         reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    ELIF            reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    ELSE            reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    THEN            reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    RPAREN          reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    COMMA           reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    COLON           reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    DOTS            reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    DIVIDE_CEIL     shift and go to state 59
    DIVIDE_FLOOR    shift and go to state 60
    MOD             shift and go to state 61
    EXP             shift and go to state 62
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! TIMES           [ reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! DIVIDE_CEIL     [ reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! DIVIDE_FLOOR    [ reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! MOD             [ reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! EXP             [ reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! POWER           [ reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 8 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]


state 108

    (9) arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    MINUS           reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    TIMES           reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    DIVIDE          reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    DIVIDE_CEIL     reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    DIVIDE_FLOOR    reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    MOD             reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    AND             reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    OR              reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    XOR             reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    GREATER_THAN    reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    SMALLER_THAN    reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    UNEQUALS        reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    EQUALS          reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    LPAREN          reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    END             reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    SEMICOLON       reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    ENDCOND         reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    ELIF            reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    ELSE            reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    THEN            reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    RPAREN          reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    COMMA           reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    COLON           reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    DOTS            reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    EXP             shift and go to state 62
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! EXP             [ reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .) ]
  ! POWER           [ reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 9 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DIVIDE_CEIL     [ shift and go to state 59 ]
  ! DIVIDE_FLOOR    [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]


state 109

    (10) arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    MINUS           reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    TIMES           reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    DIVIDE          reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    DIVIDE_CEIL     reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    DIVIDE_FLOOR    reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    MOD             reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    AND             reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    OR              reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    XOR             reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    GREATER_THAN    reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    SMALLER_THAN    reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    UNEQUALS        reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    EQUALS          reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    LPAREN          reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    END             reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    SEMICOLON       reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    ENDCOND         reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    ELIF            reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    ELSE            reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    THEN            reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    RPAREN          reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    COMMA           reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    COLON           reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    DOTS            reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    EXP             shift and go to state 62
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! EXP             [ reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .) ]
  ! POWER           [ reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 10 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DIVIDE_CEIL     [ shift and go to state 59 ]
  ! DIVIDE_FLOOR    [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]


state 110

    (11) arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    MINUS           reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    TIMES           reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    DIVIDE          reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    DIVIDE_CEIL     reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    DIVIDE_FLOOR    reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    MOD             reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    AND             reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    OR              reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    XOR             reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    GREATER_THAN    reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    SMALLER_THAN    reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    UNEQUALS        reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    EQUALS          reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    LPAREN          reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    END             reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    SEMICOLON       reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    ENDCOND         reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    ELIF            reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    ELSE            reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    THEN            reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    RPAREN          reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    COMMA           reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    COLON           reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    DOTS            reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .)
    EXP             shift and go to state 62
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! EXP             [ reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .) ]
  ! POWER           [ reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 11 (arithmetic_expression -> arithmetic_expression DIVIDE_CEIL arithmetic_expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DIVIDE_CEIL     [ shift and go to state 59 ]
  ! DIVIDE_FLOOR    [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]


state 111

    (12) arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    MINUS           reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    TIMES           reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    DIVIDE          reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    DIVIDE_CEIL     reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    DIVIDE_FLOOR    reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    MOD             reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    AND             reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    OR              reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    XOR             reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    GREATER_THAN    reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    SMALLER_THAN    reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    UNEQUALS        reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    EQUALS          reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    LPAREN          reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    END             reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    SEMICOLON       reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    ENDCOND         reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    ELIF            reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    ELSE            reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    THEN            reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    RPAREN          reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    COMMA           reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    COLON           reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    DOTS            reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .)
    EXP             shift and go to state 62
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! EXP             [ reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .) ]
  ! POWER           [ reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 12 (arithmetic_expression -> arithmetic_expression DIVIDE_FLOOR arithmetic_expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DIVIDE_CEIL     [ shift and go to state 59 ]
  ! DIVIDE_FLOOR    [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]


state 112

    (13) arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    MINUS           reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    TIMES           reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    DIVIDE          reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    DIVIDE_CEIL     reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    DIVIDE_FLOOR    reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    MOD             reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    AND             reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    OR              reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    XOR             reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    GREATER_THAN    reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    SMALLER_THAN    reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    UNEQUALS        reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    EQUALS          reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    LPAREN          reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    END             reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    SEMICOLON       reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    ENDCOND         reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    ELIF            reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    ELSE            reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    THEN            reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    RPAREN          reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    COMMA           reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    COLON           reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    DOTS            reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .)
    EXP             shift and go to state 62
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! EXP             [ reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .) ]
  ! POWER           [ reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 13 (arithmetic_expression -> arithmetic_expression MOD arithmetic_expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DIVIDE_CEIL     [ shift and go to state 59 ]
  ! DIVIDE_FLOOR    [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]


state 113

    (14) arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    MINUS           reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    TIMES           reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    DIVIDE          reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    DIVIDE_CEIL     reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    DIVIDE_FLOOR    reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    MOD             reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    AND             reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    OR              reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    XOR             reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    GREATER_THAN    reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    SMALLER_THAN    reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    UNEQUALS        reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    EQUALS          reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    LPAREN          reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    END             reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    SEMICOLON       reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    ENDCOND         reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    ELIF            reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    ELSE            reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    THEN            reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    RPAREN          reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    COMMA           reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    COLON           reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    DOTS            reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .)
    EXP             shift and go to state 62
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! EXP             [ reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .) ]
  ! POWER           [ reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 14 (arithmetic_expression -> arithmetic_expression EXP arithmetic_expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DIVIDE_CEIL     [ shift and go to state 59 ]
  ! DIVIDE_FLOOR    [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]


state 114

    (15) arithmetic_expression -> arithmetic_expression AND arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    AND             reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    OR              reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    XOR             reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    GREATER_THAN    reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    SMALLER_THAN    reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    UNEQUALS        reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    EQUALS          reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    LPAREN          reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    END             reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    SEMICOLON       reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    ENDCOND         reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    ELIF            reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    ELSE            reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    THEN            reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    RPAREN          reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    COMMA           reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    COLON           reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    DOTS            reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    DIVIDE_CEIL     shift and go to state 59
    DIVIDE_FLOOR    shift and go to state 60
    MOD             shift and go to state 61
    EXP             shift and go to state 62
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! PLUS            [ reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .) ]
  ! TIMES           [ reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .) ]
  ! DIVIDE_CEIL     [ reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .) ]
  ! DIVIDE_FLOOR    [ reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .) ]
  ! MOD             [ reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .) ]
  ! EXP             [ reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .) ]
  ! POWER           [ reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 15 (arithmetic_expression -> arithmetic_expression AND arithmetic_expression .) ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]


state 115

    (16) arithmetic_expression -> arithmetic_expression OR arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    OR              reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    GREATER_THAN    reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    SMALLER_THAN    reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    UNEQUALS        reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    EQUALS          reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    LPAREN          reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    END             reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    SEMICOLON       reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    ENDCOND         reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    ELIF            reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    ELSE            reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    THEN            reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    RPAREN          reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    COMMA           reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    COLON           reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    DOTS            reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    DIVIDE_CEIL     shift and go to state 59
    DIVIDE_FLOOR    shift and go to state 60
    MOD             shift and go to state 61
    EXP             shift and go to state 62
    AND             shift and go to state 63
    XOR             shift and go to state 65
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! PLUS            [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! TIMES           [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! DIVIDE_CEIL     [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! DIVIDE_FLOOR    [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! MOD             [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! EXP             [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! AND             [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! XOR             [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! POWER           [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 16 (arithmetic_expression -> arithmetic_expression OR arithmetic_expression .) ]
  ! OR              [ shift and go to state 64 ]


state 116

    (17) arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    OR              reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    XOR             reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    GREATER_THAN    reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    SMALLER_THAN    reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    UNEQUALS        reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    EQUALS          reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    LPAREN          reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    END             reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    SEMICOLON       reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    ENDCOND         reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    ELIF            reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    ELSE            reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    THEN            reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    RPAREN          reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    COMMA           reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    COLON           reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    DOTS            reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    DIVIDE_CEIL     shift and go to state 59
    DIVIDE_FLOOR    shift and go to state 60
    MOD             shift and go to state 61
    EXP             shift and go to state 62
    AND             shift and go to state 63
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! PLUS            [ reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .) ]
  ! TIMES           [ reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .) ]
  ! DIVIDE_CEIL     [ reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .) ]
  ! DIVIDE_FLOOR    [ reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .) ]
  ! MOD             [ reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .) ]
  ! EXP             [ reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .) ]
  ! AND             [ reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .) ]
  ! POWER           [ reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 17 (arithmetic_expression -> arithmetic_expression XOR arithmetic_expression .) ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]


state 117

    (18) arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG

    PLUS            reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    MINUS           reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    TIMES           reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    DIVIDE          reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    DIVIDE_CEIL     reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    DIVIDE_FLOOR    reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    MOD             reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    AND             reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    OR              reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    XOR             reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    GREATER_THAN    reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    SMALLER_THAN    reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    UNEQUALS        reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    EQUALS          reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    SMALLER_EQUALS  reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    GREATER_EQUALS  reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    LPAREN          reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    END             reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    SEMICOLON       reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    ENDCOND         reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    ELIF            reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    ELSE            reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    THEN            reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    RPAREN          reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    COMMA           reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    COLON           reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    DOTS            reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .)
    EXP             shift and go to state 62
    POWER           shift and go to state 66
    IMAG            shift and go to state 67

  ! EXP             [ reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .) ]
  ! POWER           [ reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .) ]
  ! IMAG            [ reduce using rule 18 (arithmetic_expression -> arithmetic_expression POWER arithmetic_expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! DIVIDE_CEIL     [ shift and go to state 59 ]
  ! DIVIDE_FLOOR    [ shift and go to state 60 ]
  ! MOD             [ shift and go to state 61 ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]
  ! XOR             [ shift and go to state 65 ]


state 118

    (24) comparison -> arithmetic_expression comparison_op arithmetic_expression . comparison_chain
    (25) comparison -> arithmetic_expression comparison_op arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG
    (26) comparison_chain -> . comparison_op arithmetic_expression comparison_chain
    (27) comparison_chain -> . comparison_op arithmetic_expression
    (28) comparison_op -> . GREATER_THAN
    (29) comparison_op -> . SMALLER_THAN
    (30) comparison_op -> . UNEQUALS
    (31) comparison_op -> . EQUALS
    (32) comparison_op -> . SMALLER_EQUALS
    (33) comparison_op -> . GREATER_EQUALS

    LPAREN          reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    END             reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    SEMICOLON       reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    ENDCOND         reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    ELIF            reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    ELSE            reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    THEN            reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    RPAREN          reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    COMMA           reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    COLON           reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    DOTS            reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 25 (comparison -> arithmetic_expression comparison_op arithmetic_expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    DIVIDE_CEIL     shift and go to state 59
    DIVIDE_FLOOR    shift and go to state 60
    MOD             shift and go to state 61
    EXP             shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    XOR             shift and go to state 65
    POWER           shift and go to state 66
    IMAG            shift and go to state 67
    GREATER_THAN    shift and go to state 69
    SMALLER_THAN    shift and go to state 70
    UNEQUALS        shift and go to state 71
    EQUALS          shift and go to state 72
    SMALLER_EQUALS  shift and go to state 73
    GREATER_EQUALS  shift and go to state 74

    comparison_op                  shift and go to state 130
    comparison_chain               shift and go to state 131

state 119

    (75) expression -> LAMBDA LPAREN parameter . RPAREN LAMBDA_ARROW expression

    RPAREN          shift and go to state 132


state 120

    (76) parameter -> expression . COMMA parameter
    (77) parameter -> expression .
    (84) expression -> expression . LPAREN expression RPAREN
    (79) parameter_keywords -> expression . COLON expression COMMA parameter_keywords
    (80) parameter_keywords -> expression . COLON expression
    (82) parameter_infty -> expression . DOTS

    COMMA           shift and go to state 133
    RPAREN          reduce using rule 77 (parameter -> expression .)
    LPAREN          shift and go to state 32
    COLON           shift and go to state 134
    DOTS            shift and go to state 135


state 121

    (78) parameter -> parameter_keywords .

    RPAREN          reduce using rule 78 (parameter -> parameter_keywords .)


state 122

    (81) parameter_keywords -> parameter_infty .

    RPAREN          reduce using rule 81 (parameter_keywords -> parameter_infty .)


state 123

    (4) arithmetic_expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    DIVIDE_CEIL     reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    DIVIDE_FLOOR    reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    IMAG            reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    SMALLER_THAN    reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    UNEQUALS        reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    SMALLER_EQUALS  reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    GREATER_EQUALS  reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    END             reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    ENDCOND         reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    ELIF            reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    DOTS            reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    CLOSED_BRACKETS reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)
    OPEN_BRACKETS   reduce using rule 4 (arithmetic_expression -> LPAREN expression RPAREN .)


state 124

    (84) expression -> expression LPAREN expression RPAREN .

    LPAREN          reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    END             reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    ENDCOND         reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    ELIF            reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    ELSE            reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    THEN            reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    RPAREN          reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    COMMA           reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    COLON           reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    DOTS            reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    CLOSED_BRACKETS reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)
    OPEN_BRACKETS   reduce using rule 84 (expression -> expression LPAREN expression RPAREN .)


state 125

    (65) if_statement -> IF expression THEN statements . ENDCOND
    (66) if_statement -> IF expression THEN statements . else_elif_body ENDCOND
    (61) statements -> statements . SEMICOLON statement
    (67) else_elif_body -> . ELIF IF expression THEN statements else_elif_body
    (68) else_elif_body -> . ELSE statements

    ENDCOND         shift and go to state 136
    SEMICOLON       shift and go to state 138
    ELIF            shift and go to state 139
    ELSE            shift and go to state 140

    else_elif_body                 shift and go to state 137

state 126

    (69) while_statement -> WHILE expression THEN statements . ENDCOND
    (61) statements -> statements . SEMICOLON statement

    ENDCOND         shift and go to state 141
    SEMICOLON       shift and go to state 138


state 127

    (70) loop_statement -> LOOP IDENTIFIER LOOPIN interval . LOOPTHEN statements ENDCOND

    LOOPTHEN        shift and go to state 142


state 128

    (71) interval -> OPEN_BRACKETS . expression COMMA expression CLOSED_BRACKETS
    (73) interval -> OPEN_BRACKETS . expression COMMA expression OPEN_BRACKETS
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 143
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 129

    (72) interval -> CLOSED_BRACKETS . expression COMMA expression CLOSED_BRACKETS
    (74) interval -> CLOSED_BRACKETS . expression COMMA expression OPEN_BRACKETS
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 144
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 130

    (26) comparison_chain -> comparison_op . arithmetic_expression comparison_chain
    (27) comparison_chain -> comparison_op . arithmetic_expression
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23
    IDENTIFIER      shift and go to state 78

    arithmetic_expression          shift and go to state 145
    atomar                         shift and go to state 21

state 131

    (24) comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .

    LPAREN          reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    END             reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    SEMICOLON       reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    ENDCOND         reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    ELIF            reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    ELSE            reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    THEN            reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    RPAREN          reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    COMMA           reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    COLON           reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    DOTS            reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    CLOSED_BRACKETS reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)
    OPEN_BRACKETS   reduce using rule 24 (comparison -> arithmetic_expression comparison_op arithmetic_expression comparison_chain .)


state 132

    (75) expression -> LAMBDA LPAREN parameter RPAREN . LAMBDA_ARROW expression

    LAMBDA_ARROW    shift and go to state 146


state 133

    (76) parameter -> expression COMMA . parameter
    (76) parameter -> . expression COMMA parameter
    (77) parameter -> . expression
    (78) parameter -> . parameter_keywords
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (79) parameter_keywords -> . expression COLON expression COMMA parameter_keywords
    (80) parameter_keywords -> . expression COLON expression
    (81) parameter_keywords -> . parameter_infty
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (82) parameter_infty -> . expression DOTS
    (83) parameter_infty -> .
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    RPAREN          reduce using rule 83 (parameter_infty -> .)
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 120
    parameter                      shift and go to state 147
    parameter_keywords             shift and go to state 121
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    parameter_infty                shift and go to state 122
    atomar                         shift and go to state 21

state 134

    (79) parameter_keywords -> expression COLON . expression COMMA parameter_keywords
    (80) parameter_keywords -> expression COLON . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 148
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 135

    (82) parameter_infty -> expression DOTS .

    RPAREN          reduce using rule 82 (parameter_infty -> expression DOTS .)


state 136

    (65) if_statement -> IF expression THEN statements ENDCOND .

    IDENTIFIER      reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    LAMBDA          reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    BEGIN           reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    IF              reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    WHILE           reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    LOOP            reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    LPAREN          reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    NOT             reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    MINUS           reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    PLUS            reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    NUMBER          reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    FLOAT           reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    END             reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    SEMICOLON       reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    ENDCOND         reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    ELIF            reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)
    ELSE            reduce using rule 65 (if_statement -> IF expression THEN statements ENDCOND .)


state 137

    (66) if_statement -> IF expression THEN statements else_elif_body . ENDCOND

    ENDCOND         shift and go to state 149


state 138

    (61) statements -> statements SEMICOLON . statement
    (55) statement -> . expression
    (56) statement -> . sequence
    (57) statement -> . if_statement
    (58) statement -> . while_statement
    (59) statement -> . loop_statement
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END
    (65) if_statement -> . IF expression THEN statements ENDCOND
    (66) if_statement -> . IF expression THEN statements else_elif_body ENDCOND
    (69) while_statement -> . WHILE expression THEN statements ENDCOND
    (70) loop_statement -> . LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    BEGIN           shift and go to state 2
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    LOOP            shift and go to state 12
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    statement                      shift and go to state 82
    expression                     shift and go to state 8
    sequence                       shift and go to state 9
    if_statement                   shift and go to state 26
    while_statement                shift and go to state 28
    loop_statement                 shift and go to state 29
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 139

    (67) else_elif_body -> ELIF . IF expression THEN statements else_elif_body

    IF              shift and go to state 150


state 140

    (68) else_elif_body -> ELSE . statements
    (60) statements -> . statement
    (61) statements -> . statements SEMICOLON statement
    (62) statements -> . if_statement statement
    (63) statements -> . while_statement statement
    (64) statements -> . loop_statement statement
    (55) statement -> . expression
    (56) statement -> . sequence
    (57) statement -> . if_statement
    (58) statement -> . while_statement
    (59) statement -> . loop_statement
    (65) if_statement -> . IF expression THEN statements ENDCOND
    (66) if_statement -> . IF expression THEN statements else_elif_body ENDCOND
    (69) while_statement -> . WHILE expression THEN statements ENDCOND
    (70) loop_statement -> . LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IF              shift and go to state 10
    WHILE           shift and go to state 11
    LOOP            shift and go to state 12
    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    BEGIN           shift and go to state 2
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    statements                     shift and go to state 151
    statement                      shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    loop_statement                 shift and go to state 7
    expression                     shift and go to state 8
    sequence                       shift and go to state 9
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 141

    (69) while_statement -> WHILE expression THEN statements ENDCOND .

    IDENTIFIER      reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    LAMBDA          reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    BEGIN           reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    IF              reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    WHILE           reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    LOOP            reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    LPAREN          reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    NOT             reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    MINUS           reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    PLUS            reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    NUMBER          reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    FLOAT           reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    END             reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    SEMICOLON       reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    ENDCOND         reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    ELIF            reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)
    ELSE            reduce using rule 69 (while_statement -> WHILE expression THEN statements ENDCOND .)


state 142

    (70) loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN . statements ENDCOND
    (60) statements -> . statement
    (61) statements -> . statements SEMICOLON statement
    (62) statements -> . if_statement statement
    (63) statements -> . while_statement statement
    (64) statements -> . loop_statement statement
    (55) statement -> . expression
    (56) statement -> . sequence
    (57) statement -> . if_statement
    (58) statement -> . while_statement
    (59) statement -> . loop_statement
    (65) if_statement -> . IF expression THEN statements ENDCOND
    (66) if_statement -> . IF expression THEN statements else_elif_body ENDCOND
    (69) while_statement -> . WHILE expression THEN statements ENDCOND
    (70) loop_statement -> . LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IF              shift and go to state 10
    WHILE           shift and go to state 11
    LOOP            shift and go to state 12
    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    BEGIN           shift and go to state 2
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    statements                     shift and go to state 152
    statement                      shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    loop_statement                 shift and go to state 7
    expression                     shift and go to state 8
    sequence                       shift and go to state 9
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 143

    (71) interval -> OPEN_BRACKETS expression . COMMA expression CLOSED_BRACKETS
    (73) interval -> OPEN_BRACKETS expression . COMMA expression OPEN_BRACKETS
    (84) expression -> expression . LPAREN expression RPAREN

    COMMA           shift and go to state 153
    LPAREN          shift and go to state 32


state 144

    (72) interval -> CLOSED_BRACKETS expression . COMMA expression CLOSED_BRACKETS
    (74) interval -> CLOSED_BRACKETS expression . COMMA expression OPEN_BRACKETS
    (84) expression -> expression . LPAREN expression RPAREN

    COMMA           shift and go to state 154
    LPAREN          shift and go to state 32


state 145

    (26) comparison_chain -> comparison_op arithmetic_expression . comparison_chain
    (27) comparison_chain -> comparison_op arithmetic_expression .
    (7) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (8) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (9) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (10) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (11) arithmetic_expression -> arithmetic_expression . DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> arithmetic_expression . DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> arithmetic_expression . MOD arithmetic_expression
    (14) arithmetic_expression -> arithmetic_expression . EXP arithmetic_expression
    (15) arithmetic_expression -> arithmetic_expression . AND arithmetic_expression
    (16) arithmetic_expression -> arithmetic_expression . OR arithmetic_expression
    (17) arithmetic_expression -> arithmetic_expression . XOR arithmetic_expression
    (18) arithmetic_expression -> arithmetic_expression . POWER arithmetic_expression
    (22) arithmetic_expression -> arithmetic_expression . IMAG
    (26) comparison_chain -> . comparison_op arithmetic_expression comparison_chain
    (27) comparison_chain -> . comparison_op arithmetic_expression
    (28) comparison_op -> . GREATER_THAN
    (29) comparison_op -> . SMALLER_THAN
    (30) comparison_op -> . UNEQUALS
    (31) comparison_op -> . EQUALS
    (32) comparison_op -> . SMALLER_EQUALS
    (33) comparison_op -> . GREATER_EQUALS

    LPAREN          reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    END             reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    SEMICOLON       reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    ENDCOND         reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    ELIF            reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    ELSE            reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    THEN            reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    RPAREN          reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    COMMA           reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    COLON           reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    DOTS            reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    CLOSED_BRACKETS reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    OPEN_BRACKETS   reduce using rule 27 (comparison_chain -> comparison_op arithmetic_expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    DIVIDE_CEIL     shift and go to state 59
    DIVIDE_FLOOR    shift and go to state 60
    MOD             shift and go to state 61
    EXP             shift and go to state 62
    AND             shift and go to state 63
    OR              shift and go to state 64
    XOR             shift and go to state 65
    POWER           shift and go to state 66
    IMAG            shift and go to state 67
    GREATER_THAN    shift and go to state 69
    SMALLER_THAN    shift and go to state 70
    UNEQUALS        shift and go to state 71
    EQUALS          shift and go to state 72
    SMALLER_EQUALS  shift and go to state 73
    GREATER_EQUALS  shift and go to state 74

    comparison_op                  shift and go to state 130
    comparison_chain               shift and go to state 155

state 146

    (75) expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW . expression
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 156
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 147

    (76) parameter -> expression COMMA parameter .

    RPAREN          reduce using rule 76 (parameter -> expression COMMA parameter .)


state 148

    (79) parameter_keywords -> expression COLON expression . COMMA parameter_keywords
    (80) parameter_keywords -> expression COLON expression .
    (84) expression -> expression . LPAREN expression RPAREN

    COMMA           shift and go to state 157
    RPAREN          reduce using rule 80 (parameter_keywords -> expression COLON expression .)
    LPAREN          shift and go to state 32


state 149

    (66) if_statement -> IF expression THEN statements else_elif_body ENDCOND .

    IDENTIFIER      reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    LAMBDA          reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    BEGIN           reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    IF              reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    WHILE           reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    LOOP            reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    LPAREN          reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    NOT             reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    MINUS           reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    PLUS            reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    NUMBER          reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    FLOAT           reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    END             reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    SEMICOLON       reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    ENDCOND         reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    ELIF            reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)
    ELSE            reduce using rule 66 (if_statement -> IF expression THEN statements else_elif_body ENDCOND .)


state 150

    (67) else_elif_body -> ELIF IF . expression THEN statements else_elif_body
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 158
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 151

    (68) else_elif_body -> ELSE statements .
    (61) statements -> statements . SEMICOLON statement

    ENDCOND         reduce using rule 68 (else_elif_body -> ELSE statements .)
    SEMICOLON       shift and go to state 138


state 152

    (70) loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements . ENDCOND
    (61) statements -> statements . SEMICOLON statement

    ENDCOND         shift and go to state 159
    SEMICOLON       shift and go to state 138


state 153

    (71) interval -> OPEN_BRACKETS expression COMMA . expression CLOSED_BRACKETS
    (73) interval -> OPEN_BRACKETS expression COMMA . expression OPEN_BRACKETS
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 160
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 154

    (72) interval -> CLOSED_BRACKETS expression COMMA . expression CLOSED_BRACKETS
    (74) interval -> CLOSED_BRACKETS expression COMMA . expression OPEN_BRACKETS
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 161
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 155

    (26) comparison_chain -> comparison_op arithmetic_expression comparison_chain .

    LPAREN          reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    END             reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    SEMICOLON       reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    ENDCOND         reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    ELIF            reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    ELSE            reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    THEN            reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    RPAREN          reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    COMMA           reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    COLON           reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    DOTS            reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    CLOSED_BRACKETS reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)
    OPEN_BRACKETS   reduce using rule 26 (comparison_chain -> comparison_op arithmetic_expression comparison_chain .)


state 156

    (75) expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .
    (84) expression -> expression . LPAREN expression RPAREN

    LPAREN          reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    END             reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    SEMICOLON       reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    ENDCOND         reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    ELIF            reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    ELSE            reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    THEN            reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    RPAREN          reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    COMMA           reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    COLON           reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    DOTS            reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    CLOSED_BRACKETS reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)
    OPEN_BRACKETS   reduce using rule 75 (expression -> LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression .)

  ! LPAREN          [ shift and go to state 32 ]


state 157

    (79) parameter_keywords -> expression COLON expression COMMA . parameter_keywords
    (79) parameter_keywords -> . expression COLON expression COMMA parameter_keywords
    (80) parameter_keywords -> . expression COLON expression
    (81) parameter_keywords -> . parameter_infty
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (82) parameter_infty -> . expression DOTS
    (83) parameter_infty -> .
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    RPAREN          reduce using rule 83 (parameter_infty -> .)
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 162
    parameter_keywords             shift and go to state 163
    parameter_infty                shift and go to state 122
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 158

    (67) else_elif_body -> ELIF IF expression . THEN statements else_elif_body
    (84) expression -> expression . LPAREN expression RPAREN

    THEN            shift and go to state 164
    LPAREN          shift and go to state 32


state 159

    (70) loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .

    IDENTIFIER      reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    LAMBDA          reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    BEGIN           reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    IF              reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    WHILE           reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    LOOP            reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    LPAREN          reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    NOT             reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    MINUS           reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    PLUS            reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    NUMBER          reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    FLOAT           reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    END             reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    SEMICOLON       reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    ENDCOND         reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    ELIF            reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)
    ELSE            reduce using rule 70 (loop_statement -> LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND .)


state 160

    (71) interval -> OPEN_BRACKETS expression COMMA expression . CLOSED_BRACKETS
    (73) interval -> OPEN_BRACKETS expression COMMA expression . OPEN_BRACKETS
    (84) expression -> expression . LPAREN expression RPAREN

    CLOSED_BRACKETS shift and go to state 166
    OPEN_BRACKETS   shift and go to state 165
    LPAREN          shift and go to state 32


state 161

    (72) interval -> CLOSED_BRACKETS expression COMMA expression . CLOSED_BRACKETS
    (74) interval -> CLOSED_BRACKETS expression COMMA expression . OPEN_BRACKETS
    (84) expression -> expression . LPAREN expression RPAREN

    CLOSED_BRACKETS shift and go to state 167
    OPEN_BRACKETS   shift and go to state 168
    LPAREN          shift and go to state 32


state 162

    (79) parameter_keywords -> expression . COLON expression COMMA parameter_keywords
    (80) parameter_keywords -> expression . COLON expression
    (84) expression -> expression . LPAREN expression RPAREN
    (82) parameter_infty -> expression . DOTS

    COLON           shift and go to state 134
    LPAREN          shift and go to state 32
    DOTS            shift and go to state 135


state 163

    (79) parameter_keywords -> expression COLON expression COMMA parameter_keywords .

    RPAREN          reduce using rule 79 (parameter_keywords -> expression COLON expression COMMA parameter_keywords .)


state 164

    (67) else_elif_body -> ELIF IF expression THEN . statements else_elif_body
    (60) statements -> . statement
    (61) statements -> . statements SEMICOLON statement
    (62) statements -> . if_statement statement
    (63) statements -> . while_statement statement
    (64) statements -> . loop_statement statement
    (55) statement -> . expression
    (56) statement -> . sequence
    (57) statement -> . if_statement
    (58) statement -> . while_statement
    (59) statement -> . loop_statement
    (65) if_statement -> . IF expression THEN statements ENDCOND
    (66) if_statement -> . IF expression THEN statements else_elif_body ENDCOND
    (69) while_statement -> . WHILE expression THEN statements ENDCOND
    (70) loop_statement -> . LOOP IDENTIFIER LOOPIN interval LOOPTHEN statements ENDCOND
    (5) expression -> . arithmetic_expression
    (6) expression -> . comparison
    (34) expression -> . IDENTIFIER ASSIGN expression
    (35) expression -> . IDENTIFIER PLUSASSIGN expression
    (36) expression -> . IDENTIFIER MINUSASSIGN expression
    (37) expression -> . IDENTIFIER TIMESASSIGN expression
    (38) expression -> . IDENTIFIER POWERASSIGN expression
    (39) expression -> . IDENTIFIER DIVIDEASSIGN expression
    (40) expression -> . IDENTIFIER DIVIDE_FLOORASSIGN expression
    (41) expression -> . IDENTIFIER DIVIDE_CEILASSIGN expression
    (42) expression -> . IDENTIFIER GREATER_THANASSIGN expression
    (43) expression -> . IDENTIFIER SMALLER_THANASSIGN expression
    (44) expression -> . IDENTIFIER GREATER_EQUALSASSIGN expression
    (45) expression -> . IDENTIFIER SMALLER_EQUALSASSIGN expression
    (46) expression -> . IDENTIFIER EQUALSASSIGN expression
    (47) expression -> . IDENTIFIER UNEQUALSASSIGN expression
    (48) expression -> . IDENTIFIER ANDASSIGN expression
    (49) expression -> . IDENTIFIER ORASSIGN expression
    (50) expression -> . IDENTIFIER XORASSIGN expression
    (51) expression -> . IDENTIFIER EXPASSIGN expression
    (52) expression -> . IDENTIFIER MODASSIGN expression
    (75) expression -> . LAMBDA LPAREN parameter RPAREN LAMBDA_ARROW expression
    (84) expression -> . expression LPAREN expression RPAREN
    (53) sequence -> . BEGIN statements END
    (54) sequence -> . BEGIN statements SEMICOLON END
    (4) arithmetic_expression -> . LPAREN expression RPAREN
    (7) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (8) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (9) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (10) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (11) arithmetic_expression -> . arithmetic_expression DIVIDE_CEIL arithmetic_expression
    (12) arithmetic_expression -> . arithmetic_expression DIVIDE_FLOOR arithmetic_expression
    (13) arithmetic_expression -> . arithmetic_expression MOD arithmetic_expression
    (14) arithmetic_expression -> . arithmetic_expression EXP arithmetic_expression
    (15) arithmetic_expression -> . arithmetic_expression AND arithmetic_expression
    (16) arithmetic_expression -> . arithmetic_expression OR arithmetic_expression
    (17) arithmetic_expression -> . arithmetic_expression XOR arithmetic_expression
    (18) arithmetic_expression -> . arithmetic_expression POWER arithmetic_expression
    (19) arithmetic_expression -> . NOT arithmetic_expression
    (20) arithmetic_expression -> . MINUS arithmetic_expression
    (21) arithmetic_expression -> . PLUS arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression IMAG
    (23) arithmetic_expression -> . atomar
    (24) comparison -> . arithmetic_expression comparison_op arithmetic_expression comparison_chain
    (25) comparison -> . arithmetic_expression comparison_op arithmetic_expression
    (1) atomar -> . NUMBER
    (2) atomar -> . FLOAT
    (3) atomar -> . IDENTIFIER

    IF              shift and go to state 10
    WHILE           shift and go to state 11
    LOOP            shift and go to state 12
    IDENTIFIER      shift and go to state 13
    LAMBDA          shift and go to state 16
    BEGIN           shift and go to state 2
    LPAREN          shift and go to state 17
    NOT             shift and go to state 20
    MINUS           shift and go to state 19
    PLUS            shift and go to state 18
    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 8
    statements                     shift and go to state 169
    statement                      shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    loop_statement                 shift and go to state 7
    sequence                       shift and go to state 9
    arithmetic_expression          shift and go to state 14
    comparison                     shift and go to state 15
    atomar                         shift and go to state 21

state 165

    (73) interval -> OPEN_BRACKETS expression COMMA expression OPEN_BRACKETS .

    LOOPTHEN        reduce using rule 73 (interval -> OPEN_BRACKETS expression COMMA expression OPEN_BRACKETS .)


state 166

    (71) interval -> OPEN_BRACKETS expression COMMA expression CLOSED_BRACKETS .

    LOOPTHEN        reduce using rule 71 (interval -> OPEN_BRACKETS expression COMMA expression CLOSED_BRACKETS .)


state 167

    (72) interval -> CLOSED_BRACKETS expression COMMA expression CLOSED_BRACKETS .

    LOOPTHEN        reduce using rule 72 (interval -> CLOSED_BRACKETS expression COMMA expression CLOSED_BRACKETS .)


state 168

    (74) interval -> CLOSED_BRACKETS expression COMMA expression OPEN_BRACKETS .

    LOOPTHEN        reduce using rule 74 (interval -> CLOSED_BRACKETS expression COMMA expression OPEN_BRACKETS .)


state 169

    (67) else_elif_body -> ELIF IF expression THEN statements . else_elif_body
    (61) statements -> statements . SEMICOLON statement
    (67) else_elif_body -> . ELIF IF expression THEN statements else_elif_body
    (68) else_elif_body -> . ELSE statements

    SEMICOLON       shift and go to state 138
    ELIF            shift and go to state 139
    ELSE            shift and go to state 140

    else_elif_body                 shift and go to state 170

state 170

    (67) else_elif_body -> ELIF IF expression THEN statements else_elif_body .

    ENDCOND         reduce using rule 67 (else_elif_body -> ELIF IF expression THEN statements else_elif_body .)

